{"version":3,"sources":["components/forms/ControlledTextField.tsx","components/loader/LoaderBackdrop.tsx","layouts/components/ContentLayoutBox.tsx","assets/images/logoUbademy.png","layouts/AccountLayoutAdmin.tsx","http/httpAxios.tsx","utils/firebaseUtils.ts","http/admin/httpAdmin.tsx","userSession/userStorage.ts","components/forms/SnackBarAlert.tsx","pages/admin/LogIn.tsx","components/routes/PrivateRoute.tsx","pages/home/Home.tsx","pages/admin/AdminDialog.tsx","layouts/components/UserOptionMenu.tsx","layouts/HomeLayout.tsx","components/table/TableLayouts.tsx","components/table/Table.tsx","pages/admin/AdminList.tsx","http/httpAxiosUser.tsx","components/chips/Chips.tsx","http/users/httpUser.tsx","pages/user/UserChangeStateDialog.tsx","pages/user/UserList.tsx","App.tsx","reportWebVitals.ts","themes/ThemeUbademy.tsx","config/firebase-config.ts","index.tsx"],"names":["ControlledTextField","props","control","name","render","field","onChange","value","error","fieldState","TextField","variant","size","helperText","message","InputLabelProps","shrink","ControlledTextFieldPassword","useState","showPassword","setShowPassword","handleClickShowPassword","type","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","edge","useStyles","makeStyles","theme","createStyles","backdrop","zIndex","color","backgroundColor","borderTop","LoaderBackdrop","classes","Backdrop","className","open","CircularProgress","ContentLayoutBox","Grid","container","item","xs","map","oneColor","index","LayoutBox","Box","sx","height","bgcolor","root","textAlign","marginTop","contentForm","paddingTop","paddingBottom","justifyContent","borderRadius","imageLogoUbademy","maxInlineSize","zoom","marginBottom","AccountLayoutAdmin","Typography","component","spacing","sm","md","lg","src","LogoUbademy","alt","children","axiosInstance","axios","create","baseURL","timeout","FirebaseTextError","responseBody","response","status","data","tieneError","mensajeError","detail","responseBodyError","responseError","msgError","HttpAxiosBase","url","get","then","catch","body","post","HttpAdmin","email","newAdministrator","userStorage","keyAdminStorage","keyTokenStorage","surname","token","userSession","localStorage","setItem","this","JSON","stringify","parse","getItem","removeItem","Alert","React","ref","elevation","SnackBarAlert","setOpen","handleClose","event","reason","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","SnackBarAlertSuccess","SnackBarAlertWarning","LogInFormFields","firebaseUtils","errorMsg","INVALID_PASSWORD","USER_DELETED","decodeTextError","LogInFormSchema","yup","shape","Email","required","Contrase√±a","LogIn","isLoading","setLoading","setMsgError","useForm","resolver","yupResolver","handleSubmit","getAdmin","adminEmail","adminToken","a","dataAdministrator","logInUser","window","location","href","undefined","auth","getAuth","signInWithEmailAndPassword","userCredential","user","getIdToken","userToken","errorMessage","decodeMessageError","code","onSubmit","label","fullWidth","Button","PrivateRoute","path","renderComponent","rest","isLogged","to","Home","AdminDialogFormFields","AdminDialog","mailSaveAdmin","setMailSaveAdmin","isSaving","setSaving","isNewAdmin","administrator","titleDialog","AdminDialogFormSchema","Name","Surname","Password","min","PasswordRepeat","oneOf","defaultValues","abortEarly","onHandleClose","onCloseDialog","onHandleSubmit","onConfirmDialog","createUserWithEmailAndPassword","password","isblocked","Dialog","maxWidth","DialogTitle","DialogContent","DialogActions","startIcon","boxContentMd","alignItems","nameUser","alignSelf","paddingLeft","nameUserMenuMobile","rotateIcon","transform","UserOptionMenu","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","showAdminDialog","setShowAdminDialog","userLogged","administratorLogged","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","handleLogOut","logOutUser","handleCloseDialogAdmin","menuId","renderMenu","id","keepMounted","PaperProps","overflow","filter","mt","width","ml","mr","content","display","top","right","transformOrigin","MenuItem","ListItemIcon","fontSize","ListItemText","primary","Link","mobileMenuId","renderMobileMenu","getFullName","Divider","currentTarget","clsx","drawerWidthOpen","Main","styled","shouldForwardProp","prop","flexGrow","padding","transition","transitions","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","AppBar","MuiAppBar","DrawerHeader","mixins","toolbar","DrawerEnd","placeItems","HomeLayout","useTheme","Container","CssBaseline","Toolbar","noWrap","Drawer","whiteSpace","flexShrink","boxSizing","anchor","style","direction","List","tableOverlay","alertTable","paddingRight","TableRowLoading","TableRow","TableCell","colSpan","LinearProgress","TableHeader","TableHead","columnsDef","oneColumnDef","headerName","TableRowBodyEmpty","AlertTitle","TableList","TableContainer","Paper","Table","TableBody","loading","dataList","length","renderSpecial","AdminList","listAdministrator","setListAdministrator","adminListColDef","oneAdministrator","Chip","icon","onReloadTable","useEffect","CardHeader","title","action","ChipActive","ChipBlocked","HttpAxiosUserBase","put","HttpUser","userId","UserChangeStateDialog","textContentFinal","blocked","onHandleConfirm","DialogContentText","orderUser","oneUser","otherUser","UserList","listUsers","setListUsers","changeStateUser","setChangeStateUser","msgSuccess","setMsgSuccess","userListColDef","sort","msgFinal","App","basename","exact","strict","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","typography","fontFamily","join","components","styleOverrides","MuiButton","outlinedSecondary","borderColor","MuiCardHeader","borderBottom","fontWeight","MuiChip","colorPrimary","colorSecondary","MuiDialogTitle","MuiDivider","MuiTableCell","head","textOverflow","textTransform","MuiTableBody","cursor","boxShadow","WebkitBoxShadow","WebkitTransform","ThemeUbademy","ThemeProvider","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.76047ab2.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Control, Controller } from \"react-hook-form\";\r\nimport { IconButton, InputAdornment, StandardTextFieldProps, TextField } from \"@material-ui/core\";\r\n\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\n\r\nexport interface ControlledTextFieldProps extends StandardTextFieldProps {\r\n    control?: Control<any>\r\n}\r\n\r\nexport const ControlledTextField = (props: ControlledTextFieldProps) => (\r\n    <Controller\r\n        control={props.control}\r\n        name={props.name || ''}\r\n        render={({field: {onChange, value}, fieldState: {error}}) => (\r\n            <TextField\r\n                {...props}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                value={value}\r\n                onChange={onChange}\r\n                error={!!error}\r\n                helperText={error ? error.message : null}\r\n                InputLabelProps={{shrink: !!(value + 1)}}\r\n            />\r\n        )}\r\n    />\r\n);\r\n\r\nexport function ControlledTextFieldPassword (props: ControlledTextFieldProps) {\r\n    const [showPassword, setShowPassword] = useState<boolean>(false);\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    return (\r\n        <Controller\r\n            control={props.control}\r\n            name={props.name || ''}\r\n            render={({field: {onChange, value}, fieldState: {error}}) => (\r\n                <TextField\r\n                    {...props}\r\n                    type={showPassword ? 'text' : 'password'}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputLabelProps={{shrink: !!(value + 1)}}\r\n                    InputProps={{\r\n                      endAdornment: <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          onClick={handleClickShowPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          { showPassword ? <VisibilityOff /> : <Visibility /> }\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }}\r\n                />\r\n            )}\r\n        />\r\n    ); \r\n}\r\n","import { makeStyles, createStyles } from '@material-ui/styles';\r\nimport { Theme } from '@material-ui/core/styles';\r\n\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles : any = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        backdrop: {\r\n            zIndex: 100000,\r\n            color: '#3498db',\r\n            backgroundColor: 'rgba(0,0,0, 0.6)',\r\n            borderTop: '2px solid #3498db'\r\n        },\r\n    }),\r\n);\r\n\r\nexport function LoaderBackdrop() { \r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Backdrop className={classes.backdrop} open={true} >\r\n            <CircularProgress color=\"inherit\" size={100}/>\r\n        </Backdrop>\r\n    );\r\n}\r\n","import { Box, Grid } from '@material-ui/core';\r\n\r\nexport function ContentLayoutBox () {\r\n    const listColor : string[] = ['#C1E0F2', '#82C1E7', '#C1E0F2', '#82C1E7'];\r\n\r\n    return (\r\n        <Grid container item xs={12}>\r\n            {\r\n                listColor.map((oneColor, index) => (\r\n                    <Grid item xs={3} key={`layoutBox_${index}`}>\r\n                        <LayoutBox color={oneColor} />\r\n                    </Grid>\r\n                ))\r\n            }\r\n        </Grid>\r\n    );\r\n}\r\n\r\ninterface LayoutBoxProps {\r\n    color: string\r\n}\r\n\r\nfunction LayoutBox (props: LayoutBoxProps) {\r\n    const heightBox : number = 60;\r\n\r\n    return (\r\n        <Box sx={{\r\n                height: heightBox,\r\n                bgcolor: props.color\r\n            }} />\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/logoUbademy.081b0c3a.png\";","import { ReactNode } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { ContentLayoutBox } from './components/ContentLayoutBox';\r\nimport LogoUbademy from 'assets/images/logoUbademy.png';\r\n\r\nconst useStyles : any = makeStyles((theme: Theme) => createStyles({\r\n    root: {\r\n        textAlign: \"-webkit-center\",\r\n        marginTop: \"7% !important\"    \r\n    },\r\n    contentForm: {\r\n        paddingTop: 5,\r\n        paddingBottom: 20,\r\n        backgroundColor: \"#E5E5E5\",\r\n        justifyContent: \"center\",\r\n        borderRadius: 17\r\n    },\r\n    imageLogoUbademy: {\r\n        maxInlineSize: \"-webkit-fill-available\",\r\n        zoom: \"25%\",\r\n        marginTop: \"-10%\",\r\n        marginBottom: \"-10%\"\r\n    },\r\n}));\r\n\r\ninterface AccountLayoutAdminProps {\r\n    children: ReactNode\r\n}\r\n\r\nexport function AccountLayoutAdmin (props: AccountLayoutAdminProps) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container>\r\n            <ContentLayoutBox />\r\n            <Grid item xs={12}>                \r\n                <Typography component=\"div\" className={classes.root}>\r\n                        <Grid container spacing={3} item xs={12} sm={6} md={3} lg={3} className={classes.contentForm}>\r\n                            <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                                <img src={LogoUbademy} className={classes.imageLogoUbademy} alt=\"logoUbademy\"></img>\r\n                            </Grid>\r\n                            { props.children }\r\n                        </Grid>\r\n                </Typography>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n","import axios, { AxiosInstance, AxiosResponse, AxiosError } from 'axios';\r\n\r\nlet axiosInstance: AxiosInstance;\r\nlet timeuotMs : number = 20000;\r\nlet urlServer : string = \"https://ubademy-admins.herokuapp.com/\";\r\n\r\naxiosInstance = axios.create({\r\n    baseURL: urlServer,\r\n    timeout: timeuotMs\r\n});\r\n\r\nconst responseBody = (response: AxiosResponse) => {\r\n    if (response.status >= 200 && response.status < 300) \r\n        return {\r\n            data: response.data,\r\n            tieneError: false,\r\n            mensajeError: \"\" \r\n        }  \r\n    \r\n    return {\r\n        data: null,\r\n        tieneError: true,\r\n        mensajeError: response.data.detail.error\r\n    }  \r\n} \r\n\r\nconst responseBodyError = (responseError: AxiosError) => {\r\n    let msgError : string = \"Por favor, verifique los datos ingresados\";\r\n\r\n    if (responseError.response?.data) msgError = responseError.response.data.detail.error;\r\n\r\n    return {\r\n        data: null,\r\n        tieneError: true,\r\n        mensajeError: msgError\r\n    }  \r\n} \r\n\r\nexport const HttpAxiosBase = {\r\n\tget: (url: string) => axiosInstance.get(url).then(responseBody).catch(responseBodyError),\r\n\tgetWithQueryParams: (url: string, params : {}) => axiosInstance.get(url, { params: params}).then(responseBody).catch(responseBodyError),\r\n\tpost: (url: string, body: {}) => axiosInstance.post(url, body).then(responseBody).catch(responseBodyError),\r\n\tput: (url: string, body: {}) => axiosInstance.put(url, body).then(responseBody).catch(responseBodyError),\r\n\tdelete: (url: string) => axiosInstance.delete(url).then(responseBody).catch(responseBodyError),\r\n};\r\n","enum FirebaseTextError {\r\n    ADMIN_ONLY_OPERATION = \"auth/admin-restricted-operation\",\r\n    ARGUMENT_ERROR = \"auth/argument-error\",\r\n    APP_NOT_AUTHORIZED = \"auth/app-not-authorized\",\r\n    APP_NOT_INSTALLED = \"auth/app-not-installed\",\r\n    CAPTCHA_CHECK_FAILED = \"auth/captcha-check-failed\",\r\n    CODE_EXPIRED = \"auth/code-expired\",\r\n    CORDOVA_NOT_READY = \"auth/cordova-not-ready\",\r\n    CORS_UNSUPPORTED = \"auth/cors-unsupported\",\r\n    CREDENTIAL_ALREADY_IN_USE = \"auth/credential-already-in-use\",\r\n    CREDENTIAL_MISMATCH = \"auth/custom-token-mismatch\",\r\n    CREDENTIAL_TOO_OLD_LOGIN_AGAIN = \"auth/requires-recent-login\",\r\n    DEPENDENT_SDK_INIT_BEFORE_AUTH = \"auth/dependent-sdk-initialized-before-auth\",\r\n    DYNAMIC_LINK_NOT_ACTIVATED = \"auth/dynamic-link-not-activated\",\r\n    EMAIL_CHANGE_NEEDS_VERIFICATION = \"auth/email-change-needs-verification\",\r\n    EMAIL_EXISTS = \"auth/email-already-in-use\",\r\n    EMULATOR_CONFIG_FAILED = \"auth/emulator-config-failed\",\r\n    EXPIRED_OOB_CODE = \"auth/expired-action-code\",\r\n    EXPIRED_POPUP_REQUEST = \"auth/cancelled-popup-request\",\r\n    INTERNAL_ERROR = \"auth/internal-error\",\r\n    INVALID_API_KEY = \"auth/invalid-api-key\",\r\n    INVALID_APP_CREDENTIAL = \"auth/invalid-app-credential\",\r\n    INVALID_APP_ID = \"auth/invalid-app-id\",\r\n    INVALID_AUTH = \"auth/invalid-user-token\",\r\n    INVALID_AUTH_EVENT = \"auth/invalid-auth-event\",\r\n    INVALID_CERT_HASH = \"auth/invalid-cert-hash\",\r\n    INVALID_CODE = \"auth/invalid-verification-code\",\r\n    INVALID_CONTINUE_URI = \"auth/invalid-continue-uri\",\r\n    INVALID_CORDOVA_CONFIGURATION = \"auth/invalid-cordova-configuration\",\r\n    INVALID_CUSTOM_TOKEN = \"auth/invalid-custom-token\",\r\n    INVALID_DYNAMIC_LINK_DOMAIN = \"auth/invalid-dynamic-link-domain\",\r\n    INVALID_EMAIL = \"auth/invalid-email\",\r\n    INVALID_EMULATOR_SCHEME = \"auth/invalid-emulator-scheme\",\r\n    INVALID_IDP_RESPONSE = \"auth/invalid-credential\",\r\n    INVALID_MESSAGE_PAYLOAD = \"auth/invalid-message-payload\",\r\n    INVALID_MFA_SESSION = \"auth/invalid-multi-factor-session\",\r\n    INVALID_OAUTH_CLIENT_ID = \"auth/invalid-oauth-client-id\",\r\n    INVALID_OAUTH_PROVIDER = \"auth/invalid-oauth-provider\",\r\n    INVALID_OOB_CODE = \"auth/invalid-action-code\",\r\n    INVALID_ORIGIN = \"auth/unauthorized-domain\",\r\n    INVALID_PASSWORD = \"auth/wrong-password\",\r\n    INVALID_PERSISTENCE = \"auth/invalid-persistence-type\",\r\n    INVALID_PHONE_NUMBER = \"auth/invalid-phone-number\",\r\n    INVALID_PROVIDER_ID = \"auth/invalid-provider-id\",\r\n    INVALID_RECIPIENT_EMAIL = \"auth/invalid-recipient-email\",\r\n    INVALID_SENDER = \"auth/invalid-sender\",\r\n    INVALID_SESSION_INFO = \"auth/invalid-verification-id\",\r\n    INVALID_TENANT_ID = \"auth/invalid-tenant-id\",\r\n    MFA_INFO_NOT_FOUND = \"auth/multi-factor-info-not-found\",\r\n    MFA_REQUIRED = \"auth/multi-factor-auth-required\",\r\n    MISSING_ANDROID_PACKAGE_NAME = \"auth/missing-android-pkg-name\",\r\n    MISSING_APP_CREDENTIAL = \"auth/missing-app-credential\",\r\n    MISSING_AUTH_DOMAIN = \"auth/auth-domain-config-required\",\r\n    MISSING_CODE = \"auth/missing-verification-code\",\r\n    MISSING_CONTINUE_URI = \"auth/missing-continue-uri\",\r\n    MISSING_IFRAME_START = \"auth/missing-iframe-start\",\r\n    MISSING_IOS_BUNDLE_ID = \"auth/missing-ios-bundle-id\",\r\n    MISSING_OR_INVALID_NONCE = \"auth/missing-or-invalid-nonce\",\r\n    MISSING_MFA_INFO = \"auth/missing-multi-factor-info\",\r\n    MISSING_MFA_SESSION = \"auth/missing-multi-factor-session\",\r\n    MISSING_PHONE_NUMBER = \"auth/missing-phone-number\",\r\n    MISSING_SESSION_INFO = \"auth/missing-verification-id\",\r\n    MODULE_DESTROYED = \"auth/app-deleted\",\r\n    NEED_CONFIRMATION = \"auth/account-exists-with-different-credential\",\r\n    NETWORK_REQUEST_FAILED = \"auth/network-request-failed\",\r\n    NULL_USER = \"auth/null-user\",\r\n    NO_AUTH_EVENT = \"auth/no-auth-event\",\r\n    NO_SUCH_PROVIDER = \"auth/no-such-provider\",\r\n    OPERATION_NOT_ALLOWED = \"auth/operation-not-allowed\",\r\n    OPERATION_NOT_SUPPORTED = \"auth/operation-not-supported-in-this-environment\",\r\n    POPUP_BLOCKED = \"auth/popup-blocked\",\r\n    POPUP_CLOSED_BY_USER = \"auth/popup-closed-by-user\",\r\n    PROVIDER_ALREADY_LINKED = \"auth/provider-already-linked\",\r\n    QUOTA_EXCEEDED = \"auth/quota-exceeded\",\r\n    REDIRECT_CANCELLED_BY_USER = \"auth/redirect-cancelled-by-user\",\r\n    REDIRECT_OPERATION_PENDING = \"auth/redirect-operation-pending\",\r\n    REJECTED_CREDENTIAL = \"auth/rejected-credential\",\r\n    SECOND_FACTOR_ALREADY_ENROLLED = \"auth/second-factor-already-in-use\",\r\n    SECOND_FACTOR_LIMIT_EXCEEDED = \"auth/maximum-second-factor-count-exceeded\",\r\n    TENANT_ID_MISMATCH = \"auth/tenant-id-mismatch\",\r\n    TIMEOUT = \"auth/timeout\",\r\n    TOKEN_EXPIRED = \"auth/user-token-expired\",\r\n    TOO_MANY_ATTEMPTS_TRY_LATER = \"auth/too-many-requests\",\r\n    UNAUTHORIZED_DOMAIN = \"auth/unauthorized-continue-uri\",\r\n    UNSUPPORTED_FIRST_FACTOR = \"auth/unsupported-first-factor\",\r\n    UNSUPPORTED_PERSISTENCE = \"auth/unsupported-persistence-type\",\r\n    UNSUPPORTED_TENANT_OPERATION = \"auth/unsupported-tenant-operation\",\r\n    UNVERIFIED_EMAIL = \"auth/unverified-email\",\r\n    USER_CANCELLED = \"auth/user-cancelled\",\r\n    USER_DELETED = \"auth/user-not-found\",\r\n    USER_DISABLED = \"auth/user-disabled\",\r\n    USER_MISMATCH = \"auth/user-mismatch\",\r\n    USER_SIGNED_OUT = \"auth/user-signed-out\",\r\n    WEAK_PASSWORD = \"auth/weak-password\",\r\n    WEB_STORAGE_UNSUPPORTED = \"auth/web-storage-unsupported\",\r\n    ALREADY_INITIALIZED = \"auth/already-initialized\"\r\n}\r\nconst defaultMsgError : string = \"Las credenciales ingresadas son incorrectas.\";\r\n\r\nconst decodeTextError = (errorMsg : string) : string => {\r\n\r\n    switch (errorMsg) {\r\n        case FirebaseTextError.INVALID_PASSWORD:\r\n            return \"La contrase√±a es incorrecta.\";\r\n\r\n        case FirebaseTextError.USER_DELETED:\r\n            return \"El mail no pertenece a un administrador registrado.\";\r\n    \r\n        default:\r\n            return defaultMsgError;\r\n    }\r\n}\r\n\r\nclass FirebaseUtils {\r\n    public decodeMessageError(errorMsg: string) : string {\r\n        return decodeTextError(errorMsg);\r\n    }\r\n}\r\n \r\nexport const firebaseUtils = new FirebaseUtils();","import { HttpAxiosBase } from \"../httpAxios\";\r\nimport { Administrator } from \"types/user/userType\";\r\nimport { ResponseBase } from \"types/reponses/responsesType\";\r\n\r\nexport const HttpAdmin = {\r\n    getAdminByEmail: (email: string) : Promise<ResponseBase<Administrator>> => {\r\n        return HttpAxiosBase.get(`admins/email/${email}`);\r\n    },\r\n\r\n    getListAdmins: () : Promise<ResponseBase<Administrator[]>> => {\r\n        return HttpAxiosBase.get(`admins`);\r\n    },\r\n    \r\n    createNewAdmin: (newAdministrator: Administrator) : Promise<ResponseBase<Administrator>> => {\r\n        return HttpAxiosBase.post(\"admins/\", newAdministrator);\r\n    }\r\n}\r\n","interface UserDataSession {\r\n    name: string,\r\n    surname: string,\r\n    email: string\r\n};\r\n\r\nclass UserStorage {\r\n    keyAdminStorage: string = \"adminSessionUbademy\";\r\n    keyTokenStorage: string = \"tokenSessionUbademy\";\r\n\r\n    public logInUser(name: string, surname: string, email: string, token: string) : void {\r\n        \r\n        let userSession: UserDataSession = \r\n        {\r\n            name: name,\r\n            surname: surname,\r\n            email: email\r\n        }\r\n\r\n        localStorage.setItem(this.keyAdminStorage, JSON.stringify(userSession));\r\n        localStorage.setItem(this.keyTokenStorage, token);\r\n    }\r\n\r\n    public get(): UserDataSession {\r\n        return JSON.parse(\r\n            localStorage.getItem(this.keyAdminStorage) as string\r\n        ) as UserDataSession\r\n    }\r\n    \r\n    public logOutUser() {\r\n        localStorage.removeItem(this.keyAdminStorage);\r\n        localStorage.removeItem(this.keyTokenStorage);\r\n    }\r\n\r\n    public isLogged() : boolean { return !!localStorage.getItem(this.keyAdminStorage); }\r\n\r\n    public getUserMail() { return this.get().email; }\r\n\r\n    public getFullName() { \r\n        let userSession : UserDataSession = this.get();\r\n\r\n        return `${userSession.name} ${userSession.surname}`;\r\n    }\r\n}\r\n \r\nexport const userStorage = new UserStorage();","import * as React from 'react';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert, { AlertColor, AlertProps } from '@mui/material/Alert';\r\n\r\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\r\n    props,\r\n    ref,\r\n) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\ninterface SnackBarAlertProps {\r\n    message: string;\r\n}\r\n\r\ninterface SnackBarAlertComponentProps extends SnackBarAlertProps {\r\n    severity: AlertColor;\r\n} \r\n\r\nfunction SnackBarAlert (props: SnackBarAlertComponentProps) {\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n  \r\n      setOpen(false);\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <Snackbar open={open} autoHideDuration={2000} onClose={handleClose} anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}>\r\n          <Alert onClose={handleClose} severity={props.severity} >\r\n            {props.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport function SnackBarAlertSuccess(props: SnackBarAlertProps) {\r\n    return (\r\n        <SnackBarAlert message={props.message} severity=\"success\" />\r\n    );\r\n}\r\n\r\nexport function SnackBarAlertWarning(props: SnackBarAlertProps) {\r\n    return (\r\n        <SnackBarAlert message={props.message} severity=\"warning\" />\r\n    );\r\n}\r\n\r\nexport function SnackBarAlertError(props: SnackBarAlertProps) {\r\n    return (\r\n        <SnackBarAlert message={props.message} severity=\"error\" />\r\n    );\r\n}","import { useState } from 'react';\r\nimport * as yup from 'yup';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/firestore';\r\nimport { getAuth, signInWithEmailAndPassword, UserCredential } from \"firebase/auth\";\r\n\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport { ControlledTextField, ControlledTextFieldPassword } from 'components/forms/ControlledTextField';\r\nimport { LoaderBackdrop } from 'components/loader/LoaderBackdrop';\r\n\r\nimport { AccountLayoutAdmin } from 'layouts/AccountLayoutAdmin';\r\nimport { HttpAdmin } from 'http/admin/httpAdmin';\r\nimport { userStorage } from 'userSession/userStorage';\r\nimport { Administrator } from 'types/user/userType';\r\nimport { ResponseBase } from 'types/reponses/responsesType';\r\nimport { SnackBarAlertWarning } from 'components/forms/SnackBarAlert';\r\nimport { firebaseUtils } from 'utils/firebaseUtils';\r\n\r\nenum LogInFormFields {\r\n    Email = 'Email',\r\n    Contrase√±a = 'Contrase√±a'\r\n}\r\n\r\nconst LogInFormSchema = yup.object().shape({\r\n    [LogInFormFields.Email]: yup.string().email('El campo debe ser un mail v√°lido').required('Campo obligatorio'),\r\n    [LogInFormFields.Contrase√±a]: yup.string().required('Campo obligatorio')\r\n})\r\n\r\ntype LogInFormData = yup.InferType<typeof LogInFormSchema>;\r\n\r\nexport function LogIn () {\r\n    const [isLoading, setLoading] = useState<boolean>(false);\r\n    const [msgError, setMsgError] = useState<string>();\r\n\r\n    const {\r\n        control,\r\n        handleSubmit\r\n    } = useForm<LogInFormData>({\r\n        resolver: yupResolver(LogInFormSchema),\r\n    });\r\n\r\n    async function getAdmin (adminEmail : string, adminToken : string) {\r\n        let response : ResponseBase<Administrator> = await HttpAdmin.getAdminByEmail(adminEmail);\r\n\r\n        if ((response.tieneError) || (response.data === null)) {\r\n            setLoading(false);\r\n            setMsgError(response.mensajeError);\r\n        } else {\r\n            let dataAdministrator : Administrator = response.data;\r\n            userStorage.logInUser(dataAdministrator.name, dataAdministrator.surname, dataAdministrator.email, adminToken);\r\n    \r\n            setLoading(false);\r\n    \r\n            window.location.href = \"/backoffice-web/admins\"; // Redirecciona a la pagina de inicio\r\n        } \r\n    }\r\n\r\n    async function onLoginClick (data: LogInFormData)  {\r\n        setLoading(true);\r\n        setMsgError(undefined);\r\n        \r\n        try {\r\n            const auth = getAuth(); \r\n            let userCredential : UserCredential = await signInWithEmailAndPassword(auth, data.Email, data.Contrase√±a);\r\n            let userToken : string = await userCredential.user.getIdToken();\r\n            \r\n            await getAdmin(data.Email, userToken);\r\n        } catch (error : any) {\r\n            var errorMessage = firebaseUtils.decodeMessageError(error.code);\r\n            setMsgError(errorMessage);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AccountLayoutAdmin>\r\n            <form onSubmit={handleSubmit(onLoginClick)}>\r\n                <Grid container spacing={2} sx={{ justifyContent: 'center' }}>\r\n                    <Grid item xs={9}>\r\n                        <ControlledTextField label=\"Usuario\"\r\n                                            name={LogInFormFields.Email}\r\n                                            fullWidth\r\n                                            control={control} />\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                        <ControlledTextFieldPassword label=\"Contrase√±a\"\r\n                                                    name={LogInFormFields.Contrase√±a}\r\n                                                    fullWidth\r\n                                                    control={control} />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <Button variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                type=\"submit\">Ingresar</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n\r\n            {\r\n                isLoading &&\r\n                    <LoaderBackdrop />\r\n            }\r\n\r\n            {\r\n                msgError &&\r\n                    <SnackBarAlertWarning message={msgError} />\r\n            }\r\n\r\n        </AccountLayoutAdmin>\r\n    ); \r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\r\nimport { userStorage } from 'userSession/userStorage';\r\n\r\ninterface IPrivateRouteProps extends RouteProps{\r\n    path: string;\r\n    renderComponent: (props: any) => React.ReactNode;\r\n    rest?: any\r\n}\r\n\r\nexport const PrivateRoute: React.FC<IPrivateRouteProps> = ({ path, renderComponent, ...rest } : any) => {\r\n\r\n    return <>\r\n        <Route\r\n            {...rest}\r\n            path={path}\r\n            render={(props) =>\r\n                userStorage.isLogged() ?\r\n                    renderComponent(props)\r\n                :\r\n                    <Redirect to='/login' />\r\n                }\r\n        />\r\n    </>\r\n};","export function Home() {\r\n    return (\r\n        <div>\r\n            <h4>Home</h4>\r\n        </div>\r\n    );\r\n}\r\n","import { useState} from 'react';\r\n\r\nimport * as yup from 'yup';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Grid,\r\n    Typography\r\n} from '@mui/material';\r\nimport CloseRoundedIcon from '@mui/icons-material/CloseRounded';\r\nimport SaveRoundedIcon from '@mui/icons-material/SaveRounded';\r\n\r\nimport { ControlledTextField, ControlledTextFieldPassword } from 'components/forms/ControlledTextField';\r\nimport { SnackBarAlertSuccess, SnackBarAlertWarning } from 'components/forms/SnackBarAlert';\r\nimport { LoaderBackdrop } from 'components/loader/LoaderBackdrop';\r\n\r\nimport { ResponseBase } from 'types/reponses/responsesType';\r\nimport { Administrator } from \"types/user/userType\";\r\n\r\nimport { HttpAdmin } from 'http/admin/httpAdmin';\r\n\r\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport { firebaseUtils } from 'utils/firebaseUtils';\r\n\r\nenum AdminDialogFormFields {\r\n    Name = 'name',\r\n    Surname = 'surname',\r\n    Email = 'email',\r\n    Password = 'password',\r\n    PasswordRepeat = 'passwordRepeat'\r\n}\r\n\r\ninterface AdminDialogProps {\r\n    administrator?: Administrator,\r\n    onCloseDialog: () => void,\r\n    onConfirmDialog: () => void\r\n}\r\n\r\nexport function AdminDialog (props: AdminDialogProps) {\r\n\r\n    const [open, setOpen] = useState<boolean>(true);\r\n    const [msgError, setMsgError] = useState<string>();\r\n    const [mailSaveAdmin, setMailSaveAdmin] = useState<string>();\r\n    const [isSaving, setSaving] = useState<boolean>(false);\r\n\r\n    const isNewAdmin : boolean = !props.administrator;\r\n    const titleDialog : string = isNewAdmin ? \"Nuevo Administrador\" : `${props.administrator?.name} ${props.administrator?.surname}`;\r\n\r\n    const AdminDialogFormSchema = \r\n        isNewAdmin ? \r\n            yup.object().shape({\r\n                [AdminDialogFormFields.Name]: yup.string().required('Campo obligatorio'),\r\n                [AdminDialogFormFields.Surname]: yup.string().required('Campo obligatorio'),\r\n                [AdminDialogFormFields.Email]: yup.string().email('El campo debe ser un mail v√°lido').required('Campo obligatorio'),\r\n                [AdminDialogFormFields.Password]: yup.string().required('Campo obligatorio').min(6, 'La contrase√±a debe tener 6 caracteres como m√≠nimo'),\r\n                [AdminDialogFormFields.PasswordRepeat]: yup.string().required('Campo obligatorio')\r\n                                                            .min(6, 'La contrase√±a debe tener 6 caracteres como m√≠nimo')\r\n                                                            .oneOf([yup.ref(AdminDialogFormFields.Password), null], 'Las constrase√±as no coinciden')\r\n            })    \r\n        :\r\n            yup.object().shape({\r\n                [AdminDialogFormFields.Name]: yup.string().required('Campo obligatorio'),\r\n                [AdminDialogFormFields.Surname]: yup.string().required('Campo obligatorio'),\r\n                [AdminDialogFormFields.Email]: yup.string().email('El campo debe ser un mail v√°lido').required('Campo obligatorio'),\r\n                [AdminDialogFormFields.Password]: yup.string().required('Campo obligatorio').min(6, 'La contrase√±a debe tener 6 caracteres como m√≠nimo')\r\n            })\r\n\r\n    \r\n    \r\n    type AdminDialogFormData = yup.InferType<typeof AdminDialogFormSchema>;\r\n\r\n    const {\r\n        control,\r\n        handleSubmit\r\n    } = useForm<AdminDialogFormData>({\r\n        defaultValues: {\r\n            name: props.administrator?.name || \"\",\r\n            surname: props.administrator?.surname || \"\",\r\n            email: props.administrator?.email || \"\",\r\n        } as AdminDialogFormData,\r\n        resolver: yupResolver(AdminDialogFormSchema, { abortEarly: false }),\r\n    });\r\n\r\n    const onHandleClose = () => {\r\n        setOpen(false);\r\n        props.onCloseDialog();\r\n    };\r\n    \r\n    const onHandleSubmit = () => {\r\n        onHandleClose();\r\n        props.onConfirmDialog();\r\n    };\r\n\r\n    async function onSaveAdmin (data: AdminDialogFormData)  {\r\n        setSaving(true);\r\n        setMsgError(undefined);\r\n        setMailSaveAdmin(undefined);\r\n\r\n        try {\r\n            const auth = getAuth(); \r\n            await createUserWithEmailAndPassword(auth, data.email, data.password);\r\n\r\n            let newAdministrator : Administrator = {\r\n                name: data.name,\r\n                surname: data.surname,\r\n                email: data.email,\r\n                isblocked: false\r\n            } as Administrator;\r\n\r\n            let response : ResponseBase<Administrator> = await HttpAdmin.createNewAdmin(newAdministrator);\r\n\r\n            if ((response.tieneError) || (response.data === null)) {\r\n                setMsgError(response.mensajeError);\r\n            } else {\r\n                let dataAdministrator : Administrator = response.data;\r\n                setMailSaveAdmin(dataAdministrator.email);\r\n                onHandleSubmit();\r\n            }\r\n\r\n            setSaving(false);\r\n\r\n        } catch (error : any) {\r\n            var errorMessage = firebaseUtils.decodeMessageError(error.code);\r\n            setMsgError(errorMessage);\r\n            setSaving(false);\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <Typography component=\"div\">\r\n            <Dialog open={open}\r\n                    onClose={onHandleClose}\r\n                    maxWidth=\"sm\">\r\n                <DialogTitle>{titleDialog}</DialogTitle>\r\n                <form onSubmit={handleSubmit(onSaveAdmin)}>\r\n                    <DialogContent>\r\n                        <Grid container spacing={3}>\r\n                            <Grid container spacing={3} item>\r\n                                <Grid item xs={12} sm={12} md={6} lg={6} >\r\n                                    <ControlledTextField label=\"Nombre\"\r\n                                                        name={AdminDialogFormFields.Name}\r\n                                                        fullWidth\r\n                                                        control={control} />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                                    <ControlledTextField label=\"Apellido\"\r\n                                                        name={AdminDialogFormFields.Surname}\r\n                                                        fullWidth\r\n                                                        control={control} />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                                    <ControlledTextField label=\"Mail\"\r\n                                                        name={AdminDialogFormFields.Email}\r\n                                                        fullWidth\r\n                                                        control={control} />\r\n                                </Grid>\r\n                            </Grid>\r\n                            \r\n                            {\r\n                                isNewAdmin && \r\n                                    <Grid container spacing={3} item>\r\n                                        <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                                            <ControlledTextFieldPassword label=\"Contrase√±a\"\r\n                                                                name={AdminDialogFormFields.Password}\r\n                                                                fullWidth\r\n                                                                control={control} />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                                            <ControlledTextFieldPassword label=\"Repetir Contrase√±a\"\r\n                                                                name={AdminDialogFormFields.PasswordRepeat}\r\n                                                                fullWidth\r\n                                                                control={control} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                            }\r\n\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                                size=\"small\"\r\n                                onClick={onHandleClose}\r\n                                startIcon={<CloseRoundedIcon />}>Cancelar</Button>\r\n\r\n                        {\r\n                            isNewAdmin &&   \r\n                                <Button variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size=\"small\"\r\n                                        type=\"submit\"\r\n                                        startIcon={<SaveRoundedIcon />}>Guardar</Button>\r\n                        }\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n\r\n            {\r\n                mailSaveAdmin &&\r\n                    <SnackBarAlertSuccess message={`El administrador con mail ${mailSaveAdmin} fue creado exitosamente!`} />\r\n            }\r\n\r\n            {\r\n                msgError && \r\n                    <SnackBarAlertWarning message={msgError} />\r\n            }\r\n\r\n            {\r\n                isSaving &&\r\n                    <LoaderBackdrop />\r\n            }\r\n        </Typography>\r\n    );\r\n}","import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles, createStyles } from '@material-ui/styles';\r\nimport { Theme } from '@material-ui/core/styles';\r\nimport clsx from 'clsx'; // para el manejo de className medio dinamico\r\n\r\nimport { \r\n    Box,\r\n    Divider,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Menu,\r\n    MenuItem,\r\n    Typography\r\n} from '@mui/material';\r\n\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport KeyboardArrowDownRoundedIcon from '@mui/icons-material/KeyboardArrowDownRounded';\r\nimport LogoutRoundedIcon from '@mui/icons-material/LogoutRounded';\r\nimport MoreIcon from '@mui/icons-material/MoreVert';\r\nimport PermContactCalendarRoundedIcon from '@mui/icons-material/PermContactCalendarRounded';\r\n\r\nimport { Administrator } from 'types/user/userType';\r\nimport { userStorage } from 'userSession/userStorage';\r\nimport { AdminDialog } from 'pages/admin/AdminDialog';\r\n\r\nconst useStyles : any = makeStyles((theme: Theme) => createStyles({\r\n    boxContentMd: {\r\n        alignItems: 'center'\r\n    },\r\n    nameUser: {\r\n        alignSelf: \"center\",\r\n        paddingLeft: \"10px\"\r\n    },\r\n    nameUserMenuMobile: {\r\n        textAlign: 'center'\r\n    },\r\n    rotateIcon: {\r\n        transform: 'rotate(180deg)'\r\n    }\r\n}));\r\n\r\nexport function UserOptionMenu () {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState<null | HTMLElement>(null);\r\n    const [showAdminDialog, setShowAdminDialog] = useState<boolean>(false);\r\n  \r\n    const userLogged = userStorage.get();\r\n    const administratorLogged : Administrator = {\r\n        name: userLogged.name,\r\n        surname: userLogged.surname,\r\n        email: userLogged.email\r\n    } as Administrator;\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n    \r\n    const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => setAnchorEl(event.currentTarget);\r\n\r\n    const handleMobileMenuClose = () => setMobileMoreAnchorEl(null);\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n    };\r\n    \r\n    const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => setMobileMoreAnchorEl(event.currentTarget);\r\n\r\n    const handleLogOut = () => userStorage.logOutUser();\r\n    \r\n    const handleCloseDialogAdmin = () => {\r\n        (isMobileMenuOpen) ? handleMobileMenuClose() : handleMenuClose();\r\n        setShowAdminDialog(false);\r\n    };\r\n\r\n    const menuId = 'menu-user-option';\r\n    const renderMenu = (\r\n        <Menu anchorEl={anchorEl}\r\n              id={menuId}\r\n              open={isMenuOpen}\r\n              keepMounted\r\n              onClose={handleMenuClose}\r\n              PaperProps={{\r\n                elevation: 0,\r\n                sx: {\r\n                    overflow: 'visible',\r\n                    filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                    mt: 1.5,\r\n                    '& .MuiAvatar-root': {\r\n                        width: 32,\r\n                        height: 32,\r\n                        ml: -0.5,\r\n                        mr: 1,\r\n                    },\r\n                    '&:before': {\r\n                        content: '\"\"',\r\n                        display: 'block',\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        right: 14,\r\n                        width: 10,\r\n                        height: 10,\r\n                        bgcolor: 'background.paper',\r\n                        transform: 'translateY(-50%) rotate(45deg)',\r\n                        zIndex: 0,\r\n                    },\r\n                },\r\n            }}\r\n            transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n            anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n        >\r\n            <MenuItem onClick={() => setShowAdminDialog(true)}>\r\n                <ListItemIcon>\r\n                    <PermContactCalendarRoundedIcon fontSize=\"small\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Mi perfil\" />\r\n            </MenuItem>\r\n            <MenuItem component={Link} \r\n                      to=\"/\"\r\n                      onClick={handleLogOut}>\r\n                <ListItemIcon>\r\n                    <LogoutRoundedIcon fontSize=\"small\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Salir\" />\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    const mobileMenuId = 'menu-user-option-mobile';\r\n    const renderMobileMenu = (\r\n        <Menu id={mobileMenuId}\r\n              anchorEl={mobileMoreAnchorEl}\r\n              keepMounted\r\n              open={isMobileMenuOpen}\r\n              onClose={handleMobileMenuClose}\r\n              PaperProps={{\r\n                elevation: 0,\r\n                sx: {\r\n                    overflow: 'visible',\r\n                    filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                    mt: 1.5,\r\n                    '& .MuiAvatar-root': {\r\n                        width: 32,\r\n                        height: 32,\r\n                        ml: -0.5,\r\n                        mr: 1,\r\n                    },\r\n                    '&:before': {\r\n                        content: '\"\"',\r\n                        display: 'block',\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        right: 14,\r\n                        width: 10,\r\n                        height: 10,\r\n                        bgcolor: 'background.paper',\r\n                        transform: 'translateY(-50%) rotate(45deg)',\r\n                        zIndex: 0,\r\n                    },\r\n                },\r\n              }}\r\n              transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n              anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n        >\r\n            <Typography component=\"div\" variant=\"overline\" className={classes.nameUserMenuMobile}>\r\n                { userStorage.getFullName() }                        \r\n            </Typography>\r\n            <Divider />\r\n            <MenuItem onClick={() => setShowAdminDialog(true)}>\r\n                <ListItemIcon>\r\n                    <PermContactCalendarRoundedIcon fontSize=\"small\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Mi perfil\" />\r\n            </MenuItem>\r\n            <MenuItem component={Link} \r\n                      to=\"/\"\r\n                      onClick={handleLogOut}>\r\n                <ListItemIcon>\r\n                    <LogoutRoundedIcon fontSize=\"small\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Salir\" />\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Box sx={{ display: { xs: 'none', md: 'flex' } }} className={classes.boxContentMd}>\r\n                <AccountCircle />\r\n                <Typography component=\"div\" variant=\"overline\" className={classes.nameUser}>\r\n                    { userStorage.getFullName() }                        \r\n                </Typography>\r\n                <IconButton size=\"large\"\r\n                            edge=\"end\"\r\n                            aria-controls={menuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleProfileMenuOpen}\r\n                            color=\"inherit\"\r\n                            className={clsx(\"\", {\r\n                                [classes.rotateIcon]: isMenuOpen || isMobileMenuOpen\r\n                            })}\r\n                >\r\n                    <KeyboardArrowDownRoundedIcon />\r\n                </IconButton>\r\n            </Box>\r\n            <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\r\n                <IconButton size=\"large\"\r\n                            aria-controls={mobileMenuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMobileMenuOpen}\r\n                            color=\"inherit\">\r\n                    <MoreIcon />\r\n                </IconButton>\r\n            </Box>\r\n            { renderMobileMenu }\r\n            { renderMenu } \r\n\r\n            {\r\n                showAdminDialog &&\r\n                    <AdminDialog onCloseDialog={handleCloseDialogAdmin} \r\n                                 onConfirmDialog={handleCloseDialogAdmin}\r\n                                 administrator={administratorLogged} />\r\n            }         \r\n        </div>\r\n    );\r\n}","import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { styled, useTheme } from '@mui/material/styles';\r\n\r\nimport {\r\n    Box,\r\n    Container,\r\n    CssBaseline,\r\n    Divider,\r\n    Drawer,\r\n    IconButton,\r\n    List,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    MenuItem,\r\n    Toolbar,\r\n    Typography\r\n} from '@mui/material';\r\n\r\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from '@mui/material/AppBar';\r\n\r\nimport AdminPanelSettingsRoundedIcon from '@mui/icons-material/AdminPanelSettingsRounded';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport SupervisorAccountRoundedIcon from '@mui/icons-material/SupervisorAccountRounded';\r\n\r\nimport LogoUbademy from 'assets/images/logoUbademy.png';\r\n\r\nimport { UserOptionMenu } from './components/UserOptionMenu';\r\n\r\nconst drawerWidthOpen = 220;\r\n\r\nconst Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })<{open?: boolean;}>\r\n    (({ theme, open }) => ({\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: `-${drawerWidthOpen}px`,\r\n    ...(open && {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    }),\r\n}));\r\n\r\ninterface AppBarProps extends MuiAppBarProps {\r\n    open?: boolean;\r\n}\r\n\r\nconst AppBar = styled(MuiAppBar, { shouldForwardProp: (prop) => prop !== 'open', })<AppBarProps>\r\n    (({ theme, open }) => ({\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    ...(open && {\r\n        width: `calc(100% - ${drawerWidthOpen}px)`,\r\n        marginLeft: `${drawerWidthOpen}px`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    }),\r\n}));\r\n\r\nconst DrawerHeader = styled('div')(({ theme }) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n}));\r\n\r\nconst DrawerEnd = styled('div')(({ theme }) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end',\r\n    placeItems: 'flex-end',\r\n    marginTop: 'auto'\r\n}));\r\n\r\ninterface HomeLayoutProps {\r\n    children?: React.ReactNode\r\n}\r\n\r\nexport function HomeLayout(props: HomeLayoutProps) {\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(true);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\">\r\n            <Box sx={{ display: 'flex' }}>\r\n                <CssBaseline />\r\n                <AppBar position=\"fixed\" open={open}>\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={handleDrawerOpen}\r\n                            edge=\"start\"\r\n                            sx={{ mr: 2, ...(open && { display: 'none' }) }}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" noWrap component=\"div\" sx={{ flexGrow: 1 }}>\r\n                            Ubademy\r\n                        </Typography>\r\n\r\n                        <UserOptionMenu />\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    sx={{\r\n                        whiteSpace: \"nowrap\",\r\n                        width: drawerWidthOpen,\r\n                        flexShrink: 0,\r\n                        '& .MuiDrawer-paper': {\r\n                            color: \"#a2a3b7\",\r\n                            backgroundColor: \"#1e1e2d\",\r\n                            width: drawerWidthOpen,\r\n                            boxSizing: 'border-box',\r\n                        },\r\n                        '& > .MuiPaper-root .MuiListItemIcon-root': {\r\n                            color: \"#a2a3b7\",\r\n                        },\r\n                    }}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                >\r\n                    <DrawerHeader>\r\n                        <IconButton onClick={handleDrawerClose} style={{color: \"#a2a3b7\"}}>\r\n                            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                        </IconButton>\r\n                    </DrawerHeader>\r\n                    <Divider />\r\n                    <List>\r\n                        <MenuItem component={Link} to=\"/admins\" sx={{marginTop: '10%'}}>\r\n                            <ListItemIcon>\r\n                                <AdminPanelSettingsRoundedIcon fontSize=\"medium\" />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Administradores\" />\r\n                        </MenuItem>                        \r\n                        <MenuItem component={Link} to=\"/users\" sx={{marginTop: '10%'}}>\r\n                            <ListItemIcon>\r\n                                <SupervisorAccountRoundedIcon fontSize=\"medium\" />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Usuarios\" />\r\n                        </MenuItem>\r\n                    </List>\r\n\r\n                    <DrawerEnd>\r\n                        <Divider />\r\n                        <img src={LogoUbademy} className=\"logo-ubademy\" alt=\"logoUbademy\"></img>\r\n                    </DrawerEnd>\r\n                </Drawer>\r\n                <Main open={open}>\r\n                    <DrawerHeader />\r\n                    { props.children }\r\n                </Main>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","import { makeStyles } from '@material-ui/styles';\r\nimport { createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    Alert,\r\n    AlertTitle,\r\n    Grid,\r\n    LinearProgress,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow\r\n} from '@mui/material';        \r\n\r\nconst useStyles : any = makeStyles((theme: Theme) => createStyles({\r\n    tableOverlay: {\r\n        justifyContent: \"center\",\r\n        paddingTop: \"20px\",\r\n        paddingBottom: \"20px\"\r\n    },\r\n    alertTable: {\r\n        '& .MuiAlert-message': {\r\n            paddingRight: \"20px\"\r\n        }\r\n    }\r\n}));\r\n\r\nexport interface TableColDef {\r\n    field: string,\r\n    headerName: string, \r\n    width?: number,\r\n    renderSpecial?: (interfaceData: any) => React.ReactElement\r\n}\r\n\r\ninterface TableRowLoadingProps {\r\n    colSpan: number\r\n}\r\n\r\nexport function TableRowLoading (props: TableRowLoadingProps) {\r\n    return (\r\n        <TableRow>\r\n            <TableCell colSpan={props.colSpan}>\r\n                    <LinearProgress />\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n}\r\n\r\ninterface TableHeaderProps {\r\n    columnsDef: TableColDef[]\r\n}\r\n\r\nexport function TableHeader (props: TableHeaderProps) {\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                {\r\n                    props.columnsDef.map((oneColumnDef: TableColDef, index: number) => (\r\n                        <TableCell key={`headerTableCell_${oneColumnDef.field}_${index}`} variant=\"head\">\r\n                            { oneColumnDef.headerName }\r\n                        </TableCell>\r\n                    ))\r\n                }\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\ninterface TableRowBodyEmptyProps {\r\n    colSpan: number\r\n}\r\n\r\nexport function TableRowBodyEmpty (props: TableRowBodyEmptyProps) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <TableRow>\r\n            <TableCell colSpan={props.colSpan}>\r\n                <Grid container className={classes.tableOverlay}>\r\n                    <Grid item xs={9} sm={9} md={5} lg={4} >\r\n                        <Alert severity=\"info\" className={classes.alertTable}>\r\n                            <AlertTitle>Atenci√≥n!</AlertTitle>\r\n                            No se han encontrado datos\r\n                        </Alert>        \r\n                    </Grid>\r\n                </Grid>\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n}","import {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableRow,\r\n    Paper\r\n} from '@mui/material';\r\nimport { TableColDef, TableHeader, TableRowBodyEmpty, TableRowLoading } from './TableLayouts';\r\n\r\ninterface TableListProps<T> {\r\n    dataList: T[] | null | undefined,\r\n    columnsDef: TableColDef[],\r\n    loading: boolean\r\n}\r\n\r\nexport function TableList<T> (props: TableListProps<T>) {\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table size=\"small\">\r\n                <TableHeader columnsDef={props.columnsDef} />\r\n                \r\n                <TableBody>\r\n                    {\r\n                        (props.loading) || (!props.dataList) ?\r\n                            <TableRowLoading colSpan={props.columnsDef.length} />\r\n                        :\r\n                            props.dataList.length ?\r\n                                props.dataList.map((data: any, index: number) => (\r\n                                    <TableRow key={`tableRow_${index}`}>\r\n                                        {\r\n                                            props.columnsDef.map((oneColumnDef : TableColDef) => (\r\n                                                oneColumnDef.renderSpecial ?\r\n                                                <TableCell key={`rowTableCell_${oneColumnDef.field}_${index}`}>{oneColumnDef.renderSpecial(data)}</TableCell>\r\n                                                :\r\n                                                <TableCell key={`rowTableCell_${oneColumnDef.field}_${index}`}>{data[oneColumnDef.field]}</TableCell>\r\n                                            ))\r\n                                        }\r\n                                    </TableRow>\r\n                                ))\r\n                            :\r\n                                <TableRowBodyEmpty colSpan={props.columnsDef.length} />\r\n                    }\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}","import { useEffect, useState } from 'react';\r\n\r\nimport { CardHeader, Chip, Grid, IconButton, Typography } from '@mui/material';\r\nimport AddRoundedIcon from '@mui/icons-material/AddRounded';\r\nimport CheckRoundedIcon from '@mui/icons-material/CheckRounded';\r\nimport CloseRoundedIcon from '@mui/icons-material/CloseRounded';\r\nimport SyncRoundedIcon from '@mui/icons-material/SyncRounded';\r\n\r\nimport { TableList } from 'components/table/Table';\r\nimport { TableColDef } from 'components/table/TableLayouts';\r\n\r\nimport { Administrator } from 'types/user/userType';\r\nimport { ResponseBase } from 'types/reponses/responsesType';\r\n\r\nimport { HttpAdmin } from 'http/admin/httpAdmin';\r\n\r\nimport { AdminDialog } from './AdminDialog';\r\n\r\nexport function AdminList () {\r\n\r\n    const [isLoading, setLoading] = useState<boolean>(true);\r\n    const [showAdminDialog, setShowAdminDialog] = useState<boolean>(false);\r\n    const [listAdministrator, setListAdministrator] = useState<Administrator[]>();\r\n\r\n    const adminListColDef : TableColDef[] = [\r\n        { field: 'name', headerName: 'Nombre' },\r\n        { field: 'surname', headerName: 'Apellido' },\r\n        { field: 'email', headerName: 'Mail' },\r\n        { \r\n            field: 'isblocked', headerName: 'Estado',\r\n            renderSpecial: (oneAdministrator: Administrator) => (\r\n                <div>\r\n                    {\r\n                        oneAdministrator.isblocked ?\r\n                            <Chip label=\"Bloqueado\" size=\"small\" color=\"secondary\" icon={<CloseRoundedIcon />} />\r\n                        :\r\n                            <Chip label=\"Activo\" size=\"small\" color=\"primary\" icon={<CheckRoundedIcon />} />                          \r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    ]\r\n\r\n    const searchAdmins = () : Promise<ResponseBase<Administrator[]>> => {\r\n        return HttpAdmin.getListAdmins();\r\n    };\r\n\r\n    const onReloadTable = () : void => {\r\n        setLoading(true)\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isLoading)\r\n            searchAdmins()\r\n                .then((response : ResponseBase<Administrator[]>) => {\r\n                    if (!response.tieneError && response.data !== null)\r\n                        setListAdministrator(response.data);\r\n\r\n                    setLoading(false);\r\n                })\r\n    }, [isLoading]);\r\n\r\n    return (\r\n        <Typography component=\"div\">\r\n            \r\n            <Grid container spacing={3} >\r\n                <Grid item xs={12} sx={{ marginBottom: \"10px\" }}>\r\n                    <CardHeader title=\"Administradores\"\r\n                                action={\r\n                                    <>\r\n                                        <IconButton color=\"primary\" sx={{ color: \"#4a4a61\"}} onClick={() => setShowAdminDialog(true)}>\r\n                                            <AddRoundedIcon />\r\n                                        </IconButton>\r\n                                        <IconButton color=\"primary\" sx={{ color: \"#4a4a61\"}} onClick={onReloadTable}>\r\n                                            <SyncRoundedIcon />\r\n                                        </IconButton>\r\n                                    </>\r\n                                } />\r\n                </Grid>         \r\n            </Grid>      \r\n            <Grid container spacing={3} >\r\n                <Grid item xs={12}>\r\n                    <TableList loading={isLoading} dataList={listAdministrator} columnsDef={adminListColDef} />\r\n                </Grid>           \r\n            </Grid>         \r\n\r\n            {\r\n                showAdminDialog &&\r\n                    <AdminDialog onCloseDialog={() => setShowAdminDialog(false)} \r\n                                 onConfirmDialog={onReloadTable} />\r\n            } \r\n\r\n        </Typography>\r\n    );\r\n}","import axios, { AxiosInstance, AxiosResponse, AxiosError } from 'axios';\r\n\r\nlet axiosInstance: AxiosInstance;\r\nlet timeuotMs : number = 20000;\r\nlet urlServer : string = \"https://obscure-wildwood-00771.herokuapp.com/\";\r\n\r\naxiosInstance = axios.create({\r\n    baseURL: urlServer,\r\n    timeout: timeuotMs\r\n});\r\n\r\nconst responseBody = (response: AxiosResponse) => {\r\n    if (response.status >= 200 && response.status < 300) \r\n        return {\r\n            data: response.data,\r\n            tieneError: false,\r\n            mensajeError: \"\" \r\n        }  \r\n    \r\n    return {\r\n        data: null,\r\n        tieneError: true,\r\n        mensajeError: response.data.detail.error\r\n    }  \r\n} \r\n\r\nconst responseBodyError = (responseError: AxiosError) => {\r\n    let msgError : string = \"Por favor, verifique los datos ingresados\";\r\n\r\n    if (responseError.response?.data) msgError = responseError.response.data.detail.error;\r\n\r\n    return {\r\n        data: null,\r\n        tieneError: true,\r\n        mensajeError: msgError\r\n    }  \r\n} \r\n\r\nexport const HttpAxiosUserBase = {\r\n\tget: (url: string) => axiosInstance.get(url).then(responseBody).catch(responseBodyError),\r\n\tgetWithQueryParams: (url: string, params : {}) => axiosInstance.get(url, { params: params}).then(responseBody).catch(responseBodyError),\r\n\tpost: (url: string, body: {}) => axiosInstance.post(url, body).then(responseBody).catch(responseBodyError),\r\n\tput: (url: string, body: {}) => axiosInstance.put(url, body).then(responseBody).catch(responseBodyError),\r\n\tdelete: (url: string) => axiosInstance.delete(url).then(responseBody).catch(responseBodyError),\r\n};\r\n","import { Chip } from '@mui/material';\r\nimport CheckRoundedIcon from '@mui/icons-material/CheckRounded';\r\nimport CloseRoundedIcon from '@mui/icons-material/CloseRounded';\r\n\r\nexport function ChipActive () {\r\n    return <Chip label=\"Activo\" size=\"small\" color=\"primary\" icon={<CheckRoundedIcon />} /> \r\n}\r\n\r\nexport function ChipBlocked () {\r\n    return <Chip label=\"Bloqueado\" size=\"small\" color=\"secondary\" icon={<CloseRoundedIcon />} />\r\n}","import { HttpAxiosUserBase } from \"../httpAxiosUser\";\r\nimport { User } from \"types/user/userType\";\r\nimport { ResponseBase } from \"types/reponses/responsesType\";\r\n\r\nexport const HttpUser = {\r\n    getListUsers: () : Promise<ResponseBase<User[]>> => {\r\n        return HttpAxiosUserBase.get(`users/`);\r\n    },\r\n\r\n    activateUser: (userId: number) : Promise<ResponseBase<void>> => {\r\n        return HttpAxiosUserBase.put(\r\n            `users/${userId}`,\r\n            {\r\n                \"blocked\": false\r\n            }\r\n        );\r\n    },\r\n\r\n    blockUser: (userId: number) : Promise<ResponseBase<void>> => {\r\n        return HttpAxiosUserBase.put(\r\n            `users/${userId}`,\r\n            {\r\n                \"blocked\": true\r\n            }\r\n        );\r\n    }\r\n}","import { useState} from 'react';\r\n\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Typography\r\n} from '@mui/material';\r\n\r\nimport { LoaderBackdrop } from 'components/loader/LoaderBackdrop';\r\n\r\nimport { User } from 'types/user/userType';\r\n\r\nimport { HttpUser } from 'http/users/httpUser';\r\n\r\ninterface UserChangeStateDialogProps {\r\n    user: User,\r\n    onCloseDialog: () => void,\r\n    onConfirmDialog: () => void\r\n}\r\n\r\nexport function UserChangeStateDialog (props: UserChangeStateDialogProps) {\r\n    const [open, setOpen] = useState<boolean>(true);\r\n    const [isSaving, setSaving] = useState<boolean>(false);\r\n    \r\n    const titleFinal : string = \"Atenci√≥n!\";\r\n    const textContentFinal : string = `Realmente quiere ${props.user.blocked ? \"activar\" : \"bloquear\"} el usuario con mail ${props.user.email}?`;\r\n\r\n    const onHandleClose = () => {\r\n        setOpen(false);\r\n        props.onCloseDialog();\r\n    };\r\n    \r\n    const onHandleConfirm = async () => {\r\n        setSaving(true);\r\n\r\n        if (props.user.blocked) {\r\n            await HttpUser.activateUser(props.user.id)\r\n                    .then(() => {\r\n                        setOpen(false);\r\n                        setSaving(false);\r\n                        props.onConfirmDialog();\r\n                    })\r\n        } else {\r\n            await HttpUser.blockUser(props.user.id)\r\n                    .then(() => {\r\n                        setOpen(false);\r\n                        setSaving(false);\r\n                        props.onConfirmDialog();\r\n                    })\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Typography component=\"div\">\r\n            <Dialog open={open} \r\n                    onClose={onHandleClose} \r\n                    aria-labelledby=\"form-dialog-title\" \r\n                    fullWidth={true}>\r\n\r\n                <DialogTitle>{titleFinal}</DialogTitle>\r\n\r\n                <DialogContent sx={{ marginTop: '10px'}}>\r\n                    <DialogContentText>{textContentFinal}</DialogContentText>\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    <Button variant=\"outlined\"\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                            onClick={onHandleClose}>Cancelar</Button>\r\n                    \r\n                    <Button variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            onClick={onHandleConfirm}>Confirmar</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {\r\n                isSaving &&\r\n                    <LoaderBackdrop />\r\n            }\r\n        </Typography>\r\n    );\r\n}","import { useEffect, useState } from 'react';\r\n\r\nimport { Button, CardHeader, Grid, IconButton, Typography } from '@mui/material';\r\nimport CompareArrowsRoundedIcon from '@mui/icons-material/CompareArrowsRounded';\r\nimport SyncRoundedIcon from '@mui/icons-material/SyncRounded';\r\n\r\nimport { SnackBarAlertSuccess } from 'components/forms/SnackBarAlert';\r\nimport { TableList } from 'components/table/Table';\r\nimport { TableColDef } from 'components/table/TableLayouts';\r\nimport { ChipActive, ChipBlocked } from 'components/chips/Chips';\r\n\r\nimport { User } from 'types/user/userType';\r\nimport { ResponseBase } from 'types/reponses/responsesType';\r\n\r\nimport { HttpUser } from 'http/users/httpUser';\r\nimport { UserChangeStateDialog } from './UserChangeStateDialog';\r\n\r\nconst orderUser = (oneUser : User, otherUser : User) : number => (oneUser.id > otherUser.id) ? 1 : -1;\r\n\r\nexport function UserList () {\r\n\r\n    const [isLoading, setLoading] = useState<boolean>(true);\r\n    const [listUsers, setListUsers] = useState<User[]>();\r\n    const [changeStateUser, setChangeStateUser] = useState<User>();\r\n    const [msgSuccess, setMsgSuccess] = useState<string>();\r\n\r\n    const userListColDef : TableColDef[] = [\r\n        { field: 'name', headerName: 'Nombre' },\r\n        { field: 'lastname', headerName: 'Apellido' },\r\n        { field: 'email', headerName: 'Mail' },\r\n        { \r\n            field: 'blocked', headerName: 'Estado',\r\n            renderSpecial: (oneUser: User) => (\r\n                <div>\r\n                    {\r\n                        oneUser.blocked ?\r\n                            <ChipBlocked />\r\n                        :\r\n                            <ChipActive />                          \r\n                    }\r\n                </div>\r\n            )\r\n        },\r\n        { \r\n            field: 'changeState', headerName: ' ',\r\n            renderSpecial: (oneUser: User) => (\r\n                <Button variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        onClick={() => { \r\n                            setMsgSuccess(undefined);\r\n                            setChangeStateUser(oneUser);\r\n                        }}\r\n                        sx={{zoom: '79%'}}\r\n                        startIcon={<CompareArrowsRoundedIcon />}>Cambiar estado</Button>\r\n            )\r\n        }\r\n    ]\r\n\r\n    const searchUsers = () : Promise<ResponseBase<User[]>> => {\r\n        return HttpUser.getListUsers();\r\n    };\r\n\r\n    const onReloadTable = () : void => {\r\n        setLoading(true)\r\n    };\r\n\r\n    const onSaveChangeUser = () : void => {\r\n        let msgFinal : string = `El usuario con mail ${changeStateUser?.email} fue ${changeStateUser?.blocked ? \"activado\" : \"bloqueado\"} exitosamente!`;\r\n        setMsgSuccess(msgFinal);\r\n        setChangeStateUser(undefined);\r\n        onReloadTable();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isLoading)\r\n            searchUsers()\r\n                .then((response : ResponseBase<User[]>) => {\r\n                    if (!response.tieneError && response.data !== null)\r\n                        setListUsers(response.data.sort(orderUser));\r\n\r\n                    setLoading(false);\r\n                })\r\n    }, [isLoading]);\r\n\r\n    return (\r\n        <Typography component=\"div\">\r\n            \r\n            <Grid container spacing={3} >\r\n                <Grid item xs={12} sx={{ marginBottom: \"10px\" }}>\r\n                    <CardHeader title=\"Usuarios\"\r\n                                action={\r\n                                    <>\r\n                                        <IconButton color=\"primary\" sx={{ color: \"#4a4a61\"}} onClick={onReloadTable}>\r\n                                            <SyncRoundedIcon />\r\n                                        </IconButton>\r\n                                    </>\r\n                                } />\r\n                </Grid>         \r\n            </Grid>      \r\n            <Grid container spacing={3} >\r\n                <Grid item xs={12}>\r\n                    <TableList loading={isLoading} dataList={listUsers} columnsDef={userListColDef} />\r\n                </Grid>           \r\n            </Grid>    \r\n\r\n            {\r\n                changeStateUser &&\r\n                    <UserChangeStateDialog user={changeStateUser}\r\n                                           onCloseDialog={() => setChangeStateUser(undefined)}\r\n                                           onConfirmDialog={onSaveChangeUser}/>\r\n            }     \r\n\r\n            {\r\n                msgSuccess &&\r\n                    <SnackBarAlertSuccess message={msgSuccess} />\r\n            }\r\n        </Typography>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport './App.css';\r\nimport { LogIn } from 'pages/admin/LogIn';\r\nimport { PrivateRoute } from 'components/routes/PrivateRoute';\r\nimport { Home } from 'pages/home/Home';\r\nimport { HomeLayout } from 'layouts/HomeLayout';\r\nimport { AdminList } from 'pages/admin/AdminList';\r\nimport { UserList } from 'pages/user/UserList';\r\n\r\nfunction App() {\r\n    return (\r\n        <Router basename=\"/backoffice-web\">\r\n            <Switch>\r\n                <Route exact strict path=\"/login\" render={(props) => <LogIn/>}/>\r\n\r\n                <PrivateRoute\r\n                    path=\"/\"\r\n                    renderComponent={\r\n                        (props) => \r\n                        <HomeLayout>\r\n                            <Switch>\r\n                                <PrivateRoute path=\"/admins\" renderComponent={(props) => <AdminList />} />\r\n                                <PrivateRoute path=\"/users\" renderComponent={(props) => <UserList />} />\r\n                                <PrivateRoute path=\"/\" renderComponent={(props) => <Home/>} />\r\n                            </Switch>\r\n                        </HomeLayout>\r\n                    }\r\n                />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { ReactNode } from 'react';\r\nimport { ThemeProvider, createTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createTheme ({\r\n    typography: {\r\n        fontFamily: [\r\n        'Poppins',\r\n        'Helvetica',\r\n        '\"sans-serif\"',\r\n        ].join(','),\r\n    },\r\n\r\n    components: {\r\n        \r\n        MuiAppBar: {\r\n            styleOverrides: {\r\n                root: {\r\n                    color: 'black',\r\n                    backgroundColor: 'white',\r\n                },\r\n            },\r\n        },\r\n\r\n        MuiButton: {\r\n            styleOverrides: {\r\n                outlinedSecondary: {\r\n                    color: \"#D82F2F\",\r\n                    borderColor: \"#D82F2F\",\r\n                    '&:hover': {\r\n                        borderColor: \"#D82F2F\",\r\n                        backgroundColor: \"#FFDEDE\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \r\n        MuiCardHeader: {\r\n            styleOverrides: {\r\n                root:{\r\n                  padding: \"7px 12px 1px 6px\",\r\n                  borderBottom: \"1.5px solid #82C1E7\",\r\n                },\r\n                title:{\r\n                  fontWeight: 600,\r\n                  fontSize: \"1.142857rem\",\r\n                  color: \"#4a4a61\"\r\n                },\r\n            }\r\n        },\r\n\r\n        MuiChip: {\r\n            styleOverrides: {\r\n                colorPrimary: {\r\n                    backgroundColor: '#BDFFC0',\r\n                    color: '#25650F'\r\n                },\r\n                colorSecondary: {\r\n                    backgroundColor: '#FAB3B3',\r\n                    color: '#610E0E'\r\n                }\r\n            }\r\n        },\r\n\r\n        MuiDialogTitle: {\r\n            styleOverrides: {\r\n                root: {\r\n                    borderBottom: \"1.5px solid #82C1E7\",\r\n                }\r\n            }\r\n        },\r\n\r\n        MuiDivider: {\r\n            styleOverrides: {\r\n                root: {\r\n                    borderColor: \"#82C1E7\"\r\n                }\r\n            }\r\n        },\r\n\r\n        MuiTableCell: {\r\n            styleOverrides: {\r\n                head: {\r\n                    color: 'rgba(0, 0, 0, 0.87)',\r\n                    borderBottom: '1px solid #82C1E7',\r\n                    fontSize: '11px',\r\n                    fontWeight: 600,\r\n                    overflow: 'hidden',\r\n                    whiteSpace: 'nowrap',\r\n                    paddingTop: '4px',\r\n                    paddingBottom: '4px',\r\n                    textOverflow: 'ellipsis',\r\n                    textTransform: 'uppercase'\r\n                },\r\n                body: {\r\n                    fontSize: \"12px\",\r\n                    padding: \"10px 15px 10px 15px\",\r\n                    textOverflow: 'ellipsis'      \r\n                },\r\n            }\r\n        },\r\n\r\n        MuiTableBody: {\r\n            styleOverrides: {\r\n                root: {\r\n                    '& tr:hover': {\r\n                        cursor: \"context-menu\",\r\n                        boxShadow: \"0px 2px 5px rgba(69,101,173,0.1)\",\r\n                        WebkitBoxShadow: \"0px 2px 5px rgba(69,101,173,0.1)\",\r\n                        transform: \"translateY(-1px) scale(1.01)\",\r\n                        WebkitTransform: \"translateY(-1px) scale(1.01)\"\r\n                      },\r\n                      '& tr:nth-of-type(odd)': {\r\n                        backgroundColor: \"#f2f8f9\"\r\n                      }  \r\n                }\r\n            }\r\n        }\r\n    },    \r\n});\r\n\r\nexport interface ThemeUbademyProps{\r\n    children?: ReactNode;\r\n}\r\n\r\nexport function ThemeUbademy (props: ThemeUbademyProps) {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n        {props.children}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import { initializeApp } from \"firebase/app\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB5cvfwNdX_HP4pJODxxlNv4JRuIIWJp_s\",\r\n    authDomain: \"ubademy-apigateway.firebaseapp.com\",\r\n    projectId: \"ubademy-apigateway\",\r\n    storageBucket: \"ubademy-apigateway.appspot.com\",\r\n    messagingSenderId: \"934202487625\",\r\n    appId: \"1:934202487625:web:ad459ee18794d8af20e098\",\r\n    measurementId: \"G-7085K4CLZJ\"\r\n};\r\n\r\ninitializeApp(firebaseConfig);\r\n//const analytics = getAnalytics(app);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ThemeUbademy } from 'themes/ThemeUbademy';\r\nimport './config/firebase-config';\r\n\r\nReactDOM.render(\r\n    <div>\r\n        <ThemeUbademy>\r\n            <App />\r\n        </ThemeUbademy>  \r\n    </div>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}