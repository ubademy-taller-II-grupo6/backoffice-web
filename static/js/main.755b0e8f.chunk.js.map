{"version":3,"sources":["components/forms/ControlledTextField.tsx","components/loader/LoaderBackdrop.tsx","layouts/components/ContentLayoutBox.tsx","assets/images/logoUbademy.png","layouts/AccountLayoutAdmin.tsx","http/httpAxios.tsx","utils/firebaseUtils.ts","http/user/httpAdmin.tsx","userSession/userStorage.ts","components/forms/SnackBarAlert.tsx","pages/admin/LogIn.tsx","components/routes/PrivateRoute.tsx","pages/home/Home.tsx","pages/profile/MyProfile.tsx","layouts/components/UserOptionMenu.tsx","layouts/HomeLayout.tsx","App.tsx","reportWebVitals.ts","themes/ThemeUbademy.tsx","config/firebase-config.ts","index.tsx"],"names":["ControlledTextField","props","control","name","render","field","onChange","value","error","fieldState","TextField","variant","size","helperText","message","InputLabelProps","shrink","useStyles","makeStyles","theme","createStyles","backdrop","zIndex","color","backgroundColor","borderTop","LoaderBackdrop","classes","Backdrop","className","open","CircularProgress","ContentLayoutBox","Grid","container","item","xs","map","oneColor","index","LayoutBox","Box","sx","height","bgcolor","root","textAlign","marginTop","contentForm","paddingTop","paddingBottom","justifyContent","borderRadius","imageLogoUbademy","maxInlineSize","zoom","marginBottom","AccountLayoutAdmin","Typography","component","spacing","sm","md","lg","src","LogoUbademy","alt","children","axiosInstance","axios","create","baseURL","timeout","FirebaseTextError","responseBody","response","status","data","tieneError","mensajeError","detail","responseBodyError","responseError","msgError","HttpAxiosBase","url","get","then","catch","HttpAdmin","email","userStorage","keyAdminStorage","keyTokenStorage","surname","token","userSession","localStorage","setItem","this","JSON","stringify","parse","getItem","removeItem","Alert","React","ref","elevation","SnackBarAlert","setOpen","handleClose","event","reason","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","SnackBarAlertWarning","LogInFormFields","firebaseUtils","errorMsg","INVALID_PASSWORD","USER_DELETED","decodeTextError","LogInFormSchema","yup","shape","Email","required","Contrase√±a","LogIn","useState","isLoading","setLoading","setMsgError","useForm","resolver","yupResolver","handleSubmit","getAdmin","adminEmail","adminToken","a","dataAdministrator","logInUser","window","location","href","undefined","auth","getAuth","signInWithEmailAndPassword","userCredential","user","getIdToken","userToken","console","log","errorMessage","decodeMessageError","code","onSubmit","label","type","Button","PrivateRoute","path","renderComponent","rest","isLogged","to","Home","AdministratorFields","MyProfile","adminProfile","setAdminData","reset","useEffect","getUserMail","style","flexGrow","getFullName","Divider","Card","CardHeader","title","CardContent","Nombre","disabled","Apellido","boxContentMd","alignItems","nameUser","alignSelf","paddingLeft","nameUserMenuMobile","rotateIcon","transform","UserOptionMenu","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","handleLogOut","logOutUser","menuId","renderMenu","id","keepMounted","PaperProps","overflow","filter","mt","width","ml","mr","content","display","position","top","right","transformOrigin","MenuItem","Link","onClick","ListItemIcon","fontSize","ListItemText","primary","mobileMenuId","renderMobileMenu","IconButton","edge","currentTarget","clsx","drawerWidthOpen","Main","styled","shouldForwardProp","prop","padding","transition","transitions","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","AppBar","MuiAppBar","DrawerHeader","mixins","toolbar","DrawerEnd","placeItems","HomeLayout","useTheme","Container","maxWidth","CssBaseline","Toolbar","noWrap","Drawer","whiteSpace","flexShrink","boxSizing","anchor","direction","List","App","basename","exact","strict","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","typography","fontFamily","join","components","styleOverrides","MuiCardHeader","borderBottom","fontWeight","MuiDivider","borderColor","ThemeUbademy","ThemeProvider","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.755b0e8f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Control, Controller } from \"react-hook-form\";\r\nimport { StandardTextFieldProps, TextField } from \"@material-ui/core\";\r\n\r\nexport interface ControlledTextFieldProps extends StandardTextFieldProps {\r\n    control?: Control<any>\r\n}\r\n\r\nexport const ControlledTextField = (props: ControlledTextFieldProps) => (\r\n    <Controller\r\n        control={props.control}\r\n        name={props.name || ''}\r\n        render={({field: {onChange, value}, fieldState: {error}}) => (\r\n            <TextField\r\n                {...props}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                value={value}\r\n                onChange={onChange}\r\n                error={!!error}\r\n                helperText={error ? error.message : null}\r\n                InputLabelProps={{shrink: !!(value + 1)}}\r\n            />\r\n        )}\r\n    />\r\n);\r\n","import { makeStyles, createStyles } from '@material-ui/styles';\r\nimport { Theme } from '@material-ui/core/styles';\r\n\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles : any = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        backdrop: {\r\n            zIndex: 100000,\r\n            color: '#3498db',\r\n            backgroundColor: 'rgba(0,0,0, 0.6)',\r\n            borderTop: '2px solid #3498db'\r\n        },\r\n    }),\r\n);\r\n\r\nexport function LoaderBackdrop() { \r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Backdrop className={classes.backdrop} open={true} >\r\n            <CircularProgress color=\"inherit\" size={100}/>\r\n        </Backdrop>\r\n    );\r\n}\r\n","import { Box, Grid } from '@material-ui/core';\r\n\r\nexport function ContentLayoutBox () {\r\n    const listColor : string[] = ['#C1E0F2', '#82C1E7', '#C1E0F2', '#82C1E7'];\r\n\r\n    return (\r\n        <Grid container item xs={12}>\r\n            {\r\n                listColor.map((oneColor, index) => (\r\n                    <Grid item xs={3} key={`layoutBox_${index}`}>\r\n                        <LayoutBox color={oneColor} />\r\n                    </Grid>\r\n                ))\r\n            }\r\n        </Grid>\r\n    );\r\n}\r\n\r\ninterface LayoutBoxProps {\r\n    color: string\r\n}\r\n\r\nfunction LayoutBox (props: LayoutBoxProps) {\r\n    const heightBox : number = 60;\r\n\r\n    return (\r\n        <Box sx={{\r\n                height: heightBox,\r\n                bgcolor: props.color\r\n            }} />\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/logoUbademy.081b0c3a.png\";","import { ReactNode } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { ContentLayoutBox } from './components/ContentLayoutBox';\r\nimport LogoUbademy from 'assets/images/logoUbademy.png';\r\n\r\nconst useStyles : any = makeStyles((theme: Theme) => createStyles({\r\n    root: {\r\n        textAlign: \"-webkit-center\",\r\n        marginTop: \"7% !important\"    \r\n    },\r\n    contentForm: {\r\n        paddingTop: 5,\r\n        paddingBottom: 20,\r\n        backgroundColor: \"#E5E5E5\",\r\n        justifyContent: \"center\",\r\n        borderRadius: 17\r\n    },\r\n    imageLogoUbademy: {\r\n        maxInlineSize: \"-webkit-fill-available\",\r\n        zoom: \"25%\",\r\n        marginTop: \"-10%\",\r\n        marginBottom: \"-10%\"\r\n    },\r\n}));\r\n\r\ninterface AccountLayoutAdminProps {\r\n    children: ReactNode\r\n}\r\n\r\nexport function AccountLayoutAdmin (props: AccountLayoutAdminProps) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container>\r\n            <ContentLayoutBox />\r\n            <Grid item xs={12}>                \r\n                <Typography component=\"div\" className={classes.root}>\r\n                        <Grid container spacing={3} item xs={12} sm={6} md={3} lg={3} className={classes.contentForm}>\r\n                            <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                                <img src={LogoUbademy} className={classes.imageLogoUbademy} alt=\"logoUbademy\"></img>\r\n                            </Grid>\r\n                            { props.children }\r\n                        </Grid>\r\n                </Typography>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n","import axios, { AxiosInstance, AxiosResponse, AxiosError } from 'axios';\r\n\r\nlet axiosInstance: AxiosInstance;\r\nlet timeuotMs : number = 20000;\r\nlet urlServer : string = \"https://ubademy-admins.herokuapp.com/\";\r\n\r\naxiosInstance = axios.create({\r\n    baseURL: urlServer,\r\n    timeout: timeuotMs\r\n});\r\n\r\nconst responseBody = (response: AxiosResponse) => {\r\n    if (response.status >= 200 && response.status < 300) \r\n        return {\r\n            data: response.data,\r\n            tieneError: false,\r\n            mensajeError: \"\" \r\n        }  \r\n    \r\n    return {\r\n        data: null,\r\n        tieneError: true,\r\n        mensajeError: response.data.detail.error\r\n    }  \r\n} \r\n\r\nconst responseBodyError = (responseError: AxiosError) => {\r\n    let msgError : string = \"Por favor, verifique los datos ingresados\";\r\n\r\n    if (responseError.response?.data) msgError = responseError.response.data.detail.error;\r\n\r\n    return {\r\n        data: null,\r\n        tieneError: true,\r\n        mensajeError: msgError\r\n    }  \r\n} \r\n\r\nexport const HttpAxiosBase = {\r\n\tget: (url: string) => axiosInstance.get(url).then(responseBody).catch(responseBodyError),\r\n\tgetWithQueryParams: (url: string, params : {}) => axiosInstance.get(url, { params: params}).then(responseBody).catch(responseBodyError),\r\n\tpost: (url: string, body: {}) => axiosInstance.post(url, body).then(responseBody).catch(responseBodyError),\r\n\tput: (url: string, body: {}) => axiosInstance.put(url, body).then(responseBody).catch(responseBodyError),\r\n\tdelete: (url: string) => axiosInstance.delete(url).then(responseBody).catch(responseBodyError),\r\n};\r\n","enum FirebaseTextError {\r\n    ADMIN_ONLY_OPERATION = \"auth/admin-restricted-operation\",\r\n    ARGUMENT_ERROR = \"auth/argument-error\",\r\n    APP_NOT_AUTHORIZED = \"auth/app-not-authorized\",\r\n    APP_NOT_INSTALLED = \"auth/app-not-installed\",\r\n    CAPTCHA_CHECK_FAILED = \"auth/captcha-check-failed\",\r\n    CODE_EXPIRED = \"auth/code-expired\",\r\n    CORDOVA_NOT_READY = \"auth/cordova-not-ready\",\r\n    CORS_UNSUPPORTED = \"auth/cors-unsupported\",\r\n    CREDENTIAL_ALREADY_IN_USE = \"auth/credential-already-in-use\",\r\n    CREDENTIAL_MISMATCH = \"auth/custom-token-mismatch\",\r\n    CREDENTIAL_TOO_OLD_LOGIN_AGAIN = \"auth/requires-recent-login\",\r\n    DEPENDENT_SDK_INIT_BEFORE_AUTH = \"auth/dependent-sdk-initialized-before-auth\",\r\n    DYNAMIC_LINK_NOT_ACTIVATED = \"auth/dynamic-link-not-activated\",\r\n    EMAIL_CHANGE_NEEDS_VERIFICATION = \"auth/email-change-needs-verification\",\r\n    EMAIL_EXISTS = \"auth/email-already-in-use\",\r\n    EMULATOR_CONFIG_FAILED = \"auth/emulator-config-failed\",\r\n    EXPIRED_OOB_CODE = \"auth/expired-action-code\",\r\n    EXPIRED_POPUP_REQUEST = \"auth/cancelled-popup-request\",\r\n    INTERNAL_ERROR = \"auth/internal-error\",\r\n    INVALID_API_KEY = \"auth/invalid-api-key\",\r\n    INVALID_APP_CREDENTIAL = \"auth/invalid-app-credential\",\r\n    INVALID_APP_ID = \"auth/invalid-app-id\",\r\n    INVALID_AUTH = \"auth/invalid-user-token\",\r\n    INVALID_AUTH_EVENT = \"auth/invalid-auth-event\",\r\n    INVALID_CERT_HASH = \"auth/invalid-cert-hash\",\r\n    INVALID_CODE = \"auth/invalid-verification-code\",\r\n    INVALID_CONTINUE_URI = \"auth/invalid-continue-uri\",\r\n    INVALID_CORDOVA_CONFIGURATION = \"auth/invalid-cordova-configuration\",\r\n    INVALID_CUSTOM_TOKEN = \"auth/invalid-custom-token\",\r\n    INVALID_DYNAMIC_LINK_DOMAIN = \"auth/invalid-dynamic-link-domain\",\r\n    INVALID_EMAIL = \"auth/invalid-email\",\r\n    INVALID_EMULATOR_SCHEME = \"auth/invalid-emulator-scheme\",\r\n    INVALID_IDP_RESPONSE = \"auth/invalid-credential\",\r\n    INVALID_MESSAGE_PAYLOAD = \"auth/invalid-message-payload\",\r\n    INVALID_MFA_SESSION = \"auth/invalid-multi-factor-session\",\r\n    INVALID_OAUTH_CLIENT_ID = \"auth/invalid-oauth-client-id\",\r\n    INVALID_OAUTH_PROVIDER = \"auth/invalid-oauth-provider\",\r\n    INVALID_OOB_CODE = \"auth/invalid-action-code\",\r\n    INVALID_ORIGIN = \"auth/unauthorized-domain\",\r\n    INVALID_PASSWORD = \"auth/wrong-password\",\r\n    INVALID_PERSISTENCE = \"auth/invalid-persistence-type\",\r\n    INVALID_PHONE_NUMBER = \"auth/invalid-phone-number\",\r\n    INVALID_PROVIDER_ID = \"auth/invalid-provider-id\",\r\n    INVALID_RECIPIENT_EMAIL = \"auth/invalid-recipient-email\",\r\n    INVALID_SENDER = \"auth/invalid-sender\",\r\n    INVALID_SESSION_INFO = \"auth/invalid-verification-id\",\r\n    INVALID_TENANT_ID = \"auth/invalid-tenant-id\",\r\n    MFA_INFO_NOT_FOUND = \"auth/multi-factor-info-not-found\",\r\n    MFA_REQUIRED = \"auth/multi-factor-auth-required\",\r\n    MISSING_ANDROID_PACKAGE_NAME = \"auth/missing-android-pkg-name\",\r\n    MISSING_APP_CREDENTIAL = \"auth/missing-app-credential\",\r\n    MISSING_AUTH_DOMAIN = \"auth/auth-domain-config-required\",\r\n    MISSING_CODE = \"auth/missing-verification-code\",\r\n    MISSING_CONTINUE_URI = \"auth/missing-continue-uri\",\r\n    MISSING_IFRAME_START = \"auth/missing-iframe-start\",\r\n    MISSING_IOS_BUNDLE_ID = \"auth/missing-ios-bundle-id\",\r\n    MISSING_OR_INVALID_NONCE = \"auth/missing-or-invalid-nonce\",\r\n    MISSING_MFA_INFO = \"auth/missing-multi-factor-info\",\r\n    MISSING_MFA_SESSION = \"auth/missing-multi-factor-session\",\r\n    MISSING_PHONE_NUMBER = \"auth/missing-phone-number\",\r\n    MISSING_SESSION_INFO = \"auth/missing-verification-id\",\r\n    MODULE_DESTROYED = \"auth/app-deleted\",\r\n    NEED_CONFIRMATION = \"auth/account-exists-with-different-credential\",\r\n    NETWORK_REQUEST_FAILED = \"auth/network-request-failed\",\r\n    NULL_USER = \"auth/null-user\",\r\n    NO_AUTH_EVENT = \"auth/no-auth-event\",\r\n    NO_SUCH_PROVIDER = \"auth/no-such-provider\",\r\n    OPERATION_NOT_ALLOWED = \"auth/operation-not-allowed\",\r\n    OPERATION_NOT_SUPPORTED = \"auth/operation-not-supported-in-this-environment\",\r\n    POPUP_BLOCKED = \"auth/popup-blocked\",\r\n    POPUP_CLOSED_BY_USER = \"auth/popup-closed-by-user\",\r\n    PROVIDER_ALREADY_LINKED = \"auth/provider-already-linked\",\r\n    QUOTA_EXCEEDED = \"auth/quota-exceeded\",\r\n    REDIRECT_CANCELLED_BY_USER = \"auth/redirect-cancelled-by-user\",\r\n    REDIRECT_OPERATION_PENDING = \"auth/redirect-operation-pending\",\r\n    REJECTED_CREDENTIAL = \"auth/rejected-credential\",\r\n    SECOND_FACTOR_ALREADY_ENROLLED = \"auth/second-factor-already-in-use\",\r\n    SECOND_FACTOR_LIMIT_EXCEEDED = \"auth/maximum-second-factor-count-exceeded\",\r\n    TENANT_ID_MISMATCH = \"auth/tenant-id-mismatch\",\r\n    TIMEOUT = \"auth/timeout\",\r\n    TOKEN_EXPIRED = \"auth/user-token-expired\",\r\n    TOO_MANY_ATTEMPTS_TRY_LATER = \"auth/too-many-requests\",\r\n    UNAUTHORIZED_DOMAIN = \"auth/unauthorized-continue-uri\",\r\n    UNSUPPORTED_FIRST_FACTOR = \"auth/unsupported-first-factor\",\r\n    UNSUPPORTED_PERSISTENCE = \"auth/unsupported-persistence-type\",\r\n    UNSUPPORTED_TENANT_OPERATION = \"auth/unsupported-tenant-operation\",\r\n    UNVERIFIED_EMAIL = \"auth/unverified-email\",\r\n    USER_CANCELLED = \"auth/user-cancelled\",\r\n    USER_DELETED = \"auth/user-not-found\",\r\n    USER_DISABLED = \"auth/user-disabled\",\r\n    USER_MISMATCH = \"auth/user-mismatch\",\r\n    USER_SIGNED_OUT = \"auth/user-signed-out\",\r\n    WEAK_PASSWORD = \"auth/weak-password\",\r\n    WEB_STORAGE_UNSUPPORTED = \"auth/web-storage-unsupported\",\r\n    ALREADY_INITIALIZED = \"auth/already-initialized\"\r\n}\r\nconst defaultMsgError : string = \"Las credenciales ingresadas son incorrectas.\";\r\n\r\nconst decodeTextError = (errorMsg : string) : string => {\r\n\r\n    switch (errorMsg) {\r\n        case FirebaseTextError.INVALID_PASSWORD:\r\n            return \"La contrase√±a es incorrecta.\";\r\n\r\n        case FirebaseTextError.USER_DELETED:\r\n            return \"El mail no pertenece a un administrador registrado.\";\r\n    \r\n        default:\r\n            return defaultMsgError;\r\n    }\r\n}\r\n\r\nclass FirebaseUtils {\r\n    public decodeMessageError(errorMsg: string) : string {\r\n        return decodeTextError(errorMsg);\r\n    }\r\n}\r\n \r\nexport const firebaseUtils = new FirebaseUtils();","import { HttpAxiosBase } from \"../httpAxios\";\r\nimport { Administrator } from \"types/user/userType\";\r\nimport { ResponseBase } from \"types/reponses/responsesType\";\r\n\r\nexport const HttpAdmin = {\r\n    getAdminByEmail: (email: string) : Promise<ResponseBase<Administrator>> => {\r\n        return HttpAxiosBase.get(`admins/email/${email}`);\r\n    }\r\n}\r\n","interface UserDataSession {\r\n    name: string,\r\n    surname: string,\r\n    email: string\r\n};\r\n\r\nclass UserStorage {\r\n    keyAdminStorage: string = \"adminSessionUbademy\";\r\n    keyTokenStorage: string = \"tokenSessionUbademy\";\r\n\r\n    public logInUser(name: string, surname: string, email: string, token: string) : void {\r\n        \r\n        let userSession: UserDataSession = \r\n        {\r\n            name: name,\r\n            surname: surname,\r\n            email: email\r\n        }\r\n\r\n        localStorage.setItem(this.keyAdminStorage, JSON.stringify(userSession));\r\n        localStorage.setItem(this.keyTokenStorage, token);\r\n    }\r\n\r\n    public get(): UserDataSession {\r\n        return JSON.parse(\r\n            localStorage.getItem(this.keyAdminStorage) as string\r\n        ) as UserDataSession\r\n    }\r\n    \r\n    public logOutUser() {\r\n        localStorage.removeItem(this.keyAdminStorage);\r\n        localStorage.removeItem(this.keyTokenStorage);\r\n    }\r\n\r\n    public isLogged() : boolean { return !!localStorage.getItem(this.keyAdminStorage); }\r\n\r\n    public getUserMail() { return this.get().email; }\r\n\r\n    public getFullName() { \r\n        let userSession : UserDataSession = this.get();\r\n\r\n        return `${userSession.name} ${userSession.surname}`;\r\n    }\r\n}\r\n \r\nexport const userStorage = new UserStorage();","import * as React from 'react';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert, { AlertColor, AlertProps } from '@mui/material/Alert';\r\n\r\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\r\n    props,\r\n    ref,\r\n) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\ninterface SnackBarAlertProps {\r\n    message: string;\r\n}\r\n\r\ninterface SnackBarAlertComponentProps extends SnackBarAlertProps {\r\n    severity: AlertColor;\r\n} \r\n\r\nfunction SnackBarAlert (props: SnackBarAlertComponentProps) {\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n  \r\n      setOpen(false);\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <Snackbar open={open} autoHideDuration={2000} onClose={handleClose} anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}>\r\n          <Alert onClose={handleClose} severity={props.severity} >\r\n            {props.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport function SnackBarAlertSuccess(props: SnackBarAlertProps) {\r\n    return (\r\n        <SnackBarAlert message={props.message} severity=\"success\" />\r\n    );\r\n}\r\n\r\nexport function SnackBarAlertWarning(props: SnackBarAlertProps) {\r\n    return (\r\n        <SnackBarAlert message={props.message} severity=\"warning\" />\r\n    );\r\n}\r\n\r\nexport function SnackBarAlertError(props: SnackBarAlertProps) {\r\n    return (\r\n        <SnackBarAlert message={props.message} severity=\"error\" />\r\n    );\r\n}","import { useState } from 'react';\r\nimport * as yup from 'yup';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/firestore';\r\nimport { getAuth, signInWithEmailAndPassword, UserCredential } from \"firebase/auth\";\r\n\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport { ControlledTextField } from 'components/forms/ControlledTextField';\r\nimport { LoaderBackdrop } from 'components/loader/LoaderBackdrop';\r\n\r\nimport { AccountLayoutAdmin } from 'layouts/AccountLayoutAdmin';\r\nimport { HttpAdmin } from 'http/user/httpAdmin';\r\nimport { userStorage } from 'userSession/userStorage';\r\nimport { Administrator } from 'types/user/userType';\r\nimport { ResponseBase } from 'types/reponses/responsesType';\r\nimport { SnackBarAlertWarning } from 'components/forms/SnackBarAlert';\r\nimport { firebaseUtils } from 'utils/firebaseUtils';\r\n\r\nenum LogInFormFields {\r\n    Email = 'Email',\r\n    Contrase√±a = 'Contrase√±a'\r\n}\r\n\r\nconst LogInFormSchema = yup.object().shape({\r\n    [LogInFormFields.Email]: yup.string().email('El campo debe ser un mail v√°lido').required('Campo obligatorio'),\r\n    [LogInFormFields.Contrase√±a]: yup.string().required('Campo obligatorio')\r\n})\r\n\r\ntype LogInFormData = yup.InferType<typeof LogInFormSchema>;\r\n\r\nexport function LogIn () {\r\n    const [isLoading, setLoading] = useState<boolean>(false);\r\n    const [msgError, setMsgError] = useState<string>();\r\n\r\n    const {\r\n        control,\r\n        handleSubmit\r\n    } = useForm<LogInFormData>({\r\n        resolver: yupResolver(LogInFormSchema),\r\n    });\r\n\r\n    async function getAdmin (adminEmail : string, adminToken : string) {\r\n        let response : ResponseBase<Administrator> = await HttpAdmin.getAdminByEmail(adminEmail);\r\n\r\n        if ((response.tieneError) || (response.data === null)) {\r\n            setLoading(false);\r\n            setMsgError(response.mensajeError);\r\n        } else {\r\n            let dataAdministrator : Administrator = response.data;\r\n            userStorage.logInUser(dataAdministrator.name, dataAdministrator.surname, dataAdministrator.email, adminToken);\r\n    \r\n            setLoading(false);\r\n    \r\n            window.location.href = \"/backoffice-web/\"; // Redirecciona a la pagina de inicio\r\n        } \r\n    }\r\n\r\n    async function onLoginClick (data: LogInFormData)  {\r\n        setLoading(true);\r\n        setMsgError(undefined);\r\n        \r\n        try {\r\n            const auth = getAuth(); \r\n            let userCredential : UserCredential = await signInWithEmailAndPassword(auth, data.Email, data.Contrase√±a);\r\n            let userToken : string = await userCredential.user.getIdToken();\r\n            console.log(\"TOKEN \" + userToken);\r\n\r\n            await getAdmin(data.Email, userToken);\r\n        } catch (error : any) {\r\n            var errorMessage = firebaseUtils.decodeMessageError(error.code);\r\n            setMsgError(errorMessage);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AccountLayoutAdmin>\r\n            <form onSubmit={handleSubmit(onLoginClick)}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <ControlledTextField label=\"Usuario\"\r\n                                            name={LogInFormFields.Email}\r\n                                            control={control} />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <ControlledTextField label=\"Contrase√±a\"\r\n                                            type='password'\r\n                                            name={LogInFormFields.Contrase√±a}\r\n                                            control={control} />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <Button variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                type=\"submit\">Ingresar</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n\r\n            {\r\n                isLoading &&\r\n                    <LoaderBackdrop />\r\n            }\r\n\r\n            {\r\n                msgError &&\r\n                    <SnackBarAlertWarning message={msgError} />\r\n            }\r\n\r\n        </AccountLayoutAdmin>\r\n    ); \r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\r\nimport { userStorage } from 'userSession/userStorage';\r\n\r\ninterface IPrivateRouteProps extends RouteProps{\r\n    path: string;\r\n    renderComponent: (props: any) => React.ReactNode;\r\n    rest?: any\r\n}\r\n\r\nexport const PrivateRoute: React.FC<IPrivateRouteProps> = ({ path, renderComponent, ...rest } : any) => {\r\n\r\n    return <>\r\n        <Route\r\n            {...rest}\r\n            path={path}\r\n            render={(props) =>\r\n                userStorage.isLogged() ?\r\n                    renderComponent(props)\r\n                :\r\n                    <Redirect to='/login' />\r\n                }\r\n        />\r\n    </>\r\n};","export function Home() {\r\n    return (\r\n        <div>\r\n            <h4>Home</h4>\r\n        </div>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport {\r\n    Box,\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    Divider,\r\n    Grid\r\n} from \"@mui/material\";\r\nimport { ControlledTextField } from 'components/forms/ControlledTextField';\r\nimport { SnackBarAlertWarning } from 'components/forms/SnackBarAlert';\r\n\r\nimport { userStorage } from \"userSession/userStorage\";\r\n\r\nimport { HttpAdmin } from 'http/user/httpAdmin';\r\n\r\nimport { Administrator } from 'types/user/userType';\r\nimport { ResponseBase } from 'types/reponses/responsesType';\r\n\r\nenum AdministratorFields {\r\n    Nombre = 'name',\r\n    Apellido = 'surname',\r\n    Email = 'email'\r\n}\r\n\r\nexport function MyProfile () {\r\n    const [isLoading, setLoading] = useState<boolean>(true);\r\n    const [msgError, setMsgError] = useState<string>();\r\n    const [adminProfile, setAdminData] = useState<Administrator>();\r\n\r\n    const {\r\n        control,\r\n        reset\r\n    } = useForm<Administrator>({});\r\n\r\n    useEffect(() => {\r\n        reset({\r\n            name: adminProfile?.name,\r\n            surname: adminProfile?.surname,\r\n            email: adminProfile?.email\r\n        });\r\n    }, [reset, adminProfile]);\r\n\r\n    useEffect(() => {\r\n        HttpAdmin.getAdminByEmail(userStorage.getUserMail())\r\n            .then((response : ResponseBase<Administrator>) => {\r\n                if (response.tieneError || response.data === null)\r\n                    setMsgError(response.mensajeError)\r\n                else \r\n                    setAdminData(response.data);\r\n\r\n                setLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <Box style={{ flexGrow: 1, }}>\r\n            <Grid container spacing={3} sx={{ justifyContent: 'center' }}>\r\n                <Grid item xs={12}>\r\n                    {userStorage.getFullName()}\r\n                    <Divider />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                    <Card>\r\n                        <CardHeader title=\"Datos Principales\"></CardHeader>\r\n                        <CardContent>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <ControlledTextField label=\"Nombre\"\r\n                                                        name={AdministratorFields.Nombre}\r\n                                                        control={control}\r\n                                                        disabled={true} />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <ControlledTextField label=\"Apellido\"\r\n                                                        name={AdministratorFields.Apellido}\r\n                                                        control={control}\r\n                                                        disabled={true} />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <ControlledTextField label=\"Email\"\r\n                                                        name={AdministratorFields.Email}\r\n                                                        control={control}\r\n                                                        disabled={true} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            {\r\n                isLoading\r\n            }\r\n\r\n            {\r\n                !isLoading && msgError &&\r\n                    <SnackBarAlertWarning message={msgError} />\r\n            }\r\n        </Box>\r\n    );\r\n}\r\n/*\r\n<Grid item xs={12} sm={12} md={6} lg={6}>\r\n    <Card>\r\n        <CardHeader title=\"Otros Datos\"></CardHeader>\r\n        <CardContent></CardContent>\r\n    </Card>\r\n</Grid>\r\n*/","import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport clsx from 'clsx'; // para el manejo de className medio dinamico\r\n\r\nimport { makeStyles, createStyles } from '@material-ui/styles';\r\nimport { Theme } from '@material-ui/core/styles';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport KeyboardArrowDownRoundedIcon from '@mui/icons-material/KeyboardArrowDownRounded';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport LogoutRoundedIcon from '@mui/icons-material/LogoutRounded';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MoreIcon from '@mui/icons-material/MoreVert';\r\nimport PermContactCalendarRoundedIcon from '@mui/icons-material/PermContactCalendarRounded';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { userStorage } from 'userSession/userStorage';\r\n\r\nconst useStyles : any = makeStyles((theme: Theme) => createStyles({\r\n    boxContentMd: {\r\n        alignItems: 'center'\r\n    },\r\n    nameUser: {\r\n        alignSelf: \"center\",\r\n        paddingLeft: \"10px\"\r\n    },\r\n    nameUserMenuMobile: {\r\n        textAlign: 'center'\r\n    },\r\n    rotateIcon: {\r\n        transform: 'rotate(180deg)'\r\n    }\r\n}));\r\n\r\nexport function UserOptionMenu () {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState<null | HTMLElement>(null);\r\n  \r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n  \r\n    const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => setAnchorEl(event.currentTarget);\r\n\r\n    const handleMobileMenuClose = () => setMobileMoreAnchorEl(null);\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n    };\r\n    \r\n    const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => setMobileMoreAnchorEl(event.currentTarget);\r\n\r\n    const handleLogOut = () => userStorage.logOutUser();\r\n    \r\n    const menuId = 'menu-user-option';\r\n    const renderMenu = (\r\n        <Menu anchorEl={anchorEl}\r\n              id={menuId}\r\n              open={isMenuOpen}\r\n              keepMounted\r\n              onClose={handleMenuClose}\r\n              PaperProps={{\r\n                elevation: 0,\r\n                sx: {\r\n                    overflow: 'visible',\r\n                    filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                    mt: 1.5,\r\n                    '& .MuiAvatar-root': {\r\n                        width: 32,\r\n                        height: 32,\r\n                        ml: -0.5,\r\n                        mr: 1,\r\n                    },\r\n                    '&:before': {\r\n                        content: '\"\"',\r\n                        display: 'block',\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        right: 14,\r\n                        width: 10,\r\n                        height: 10,\r\n                        bgcolor: 'background.paper',\r\n                        transform: 'translateY(-50%) rotate(45deg)',\r\n                        zIndex: 0,\r\n                    },\r\n                },\r\n            }}\r\n            transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n            anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n        >\r\n            <MenuItem component={Link} \r\n                      to=\"/myProfile\"\r\n                      onClick={handleMenuClose}>\r\n                <ListItemIcon>\r\n                    <PermContactCalendarRoundedIcon fontSize=\"small\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Mi perfil\" />\r\n            </MenuItem>\r\n            <MenuItem component={Link} \r\n                      to=\"/\"\r\n                      onClick={handleLogOut}>\r\n                <ListItemIcon>\r\n                    <LogoutRoundedIcon fontSize=\"small\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Salir\" />\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    const mobileMenuId = 'menu-user-option-mobile';\r\n    const renderMobileMenu = (\r\n        <Menu id={mobileMenuId}\r\n              anchorEl={mobileMoreAnchorEl}\r\n              keepMounted\r\n              open={isMobileMenuOpen}\r\n              onClose={handleMobileMenuClose}\r\n              PaperProps={{\r\n                elevation: 0,\r\n                sx: {\r\n                    overflow: 'visible',\r\n                    filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                    mt: 1.5,\r\n                    '& .MuiAvatar-root': {\r\n                        width: 32,\r\n                        height: 32,\r\n                        ml: -0.5,\r\n                        mr: 1,\r\n                    },\r\n                    '&:before': {\r\n                        content: '\"\"',\r\n                        display: 'block',\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        right: 14,\r\n                        width: 10,\r\n                        height: 10,\r\n                        bgcolor: 'background.paper',\r\n                        transform: 'translateY(-50%) rotate(45deg)',\r\n                        zIndex: 0,\r\n                    },\r\n                },\r\n              }}\r\n              transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n              anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n        >\r\n            <Typography component=\"div\" variant=\"overline\" className={classes.nameUserMenuMobile}>\r\n                { userStorage.getFullName() }                        \r\n            </Typography>\r\n            <Divider />\r\n            <MenuItem component={Link} \r\n                      to=\"/myProfile\"\r\n                      onClick={handleMenuClose}>\r\n                <ListItemIcon>\r\n                    <PermContactCalendarRoundedIcon fontSize=\"small\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Mi perfil\" />\r\n            </MenuItem>\r\n            <MenuItem component={Link} \r\n                      to=\"/\"\r\n                      onClick={handleLogOut}>\r\n                <ListItemIcon>\r\n                    <LogoutRoundedIcon fontSize=\"small\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Salir\" />\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Box sx={{ display: { xs: 'none', md: 'flex' } }} className={classes.boxContentMd}>\r\n                <AccountCircle />\r\n                <Typography component=\"div\" variant=\"overline\" className={classes.nameUser}>\r\n                    { userStorage.getFullName() }                        \r\n                </Typography>\r\n                <IconButton size=\"large\"\r\n                            edge=\"end\"\r\n                            aria-controls={menuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleProfileMenuOpen}\r\n                            color=\"inherit\"\r\n                            className={clsx(\"\", {\r\n                                [classes.rotateIcon]: isMenuOpen || isMobileMenuOpen\r\n                            })}\r\n                >\r\n                    <KeyboardArrowDownRoundedIcon />\r\n                </IconButton>\r\n            </Box>\r\n            <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\r\n                <IconButton size=\"large\"\r\n                            aria-controls={mobileMenuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMobileMenuOpen}\r\n                            color=\"inherit\">\r\n                    <MoreIcon />\r\n                </IconButton>\r\n            </Box>\r\n            { renderMobileMenu }\r\n            { renderMenu }            \r\n        </div>\r\n    );\r\n}","import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport List from '@mui/material/List';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { UserOptionMenu } from './components/UserOptionMenu';\r\nimport SupervisorAccountRoundedIcon from '@mui/icons-material/SupervisorAccountRounded';\r\nimport LogoUbademy from 'assets/images/logoUbademy.png';\r\nimport DashboardRoundedIcon from '@mui/icons-material/DashboardRounded';\r\nimport { Container } from '@mui/material';\r\nconst drawerWidthOpen = 220;\r\n\r\nconst Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })<{open?: boolean;}>\r\n    (({ theme, open }) => ({\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: `-${drawerWidthOpen}px`,\r\n    ...(open && {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    }),\r\n}));\r\n\r\ninterface AppBarProps extends MuiAppBarProps {\r\n    open?: boolean;\r\n}\r\n\r\nconst AppBar = styled(MuiAppBar, { shouldForwardProp: (prop) => prop !== 'open', })<AppBarProps>\r\n    (({ theme, open }) => ({\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    ...(open && {\r\n        width: `calc(100% - ${drawerWidthOpen}px)`,\r\n        marginLeft: `${drawerWidthOpen}px`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    }),\r\n}));\r\n\r\nconst DrawerHeader = styled('div')(({ theme }) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n}));\r\n\r\nconst DrawerEnd = styled('div')(({ theme }) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end',\r\n    placeItems: 'flex-end',\r\n    marginTop: 'auto'\r\n}));\r\n\r\ninterface HomeLayoutProps {\r\n    children?: React.ReactNode\r\n}\r\n\r\nexport function HomeLayout(props: HomeLayoutProps) {\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(true);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\">\r\n            <Box sx={{ display: 'flex' }}>\r\n                <CssBaseline />\r\n                <AppBar position=\"fixed\" open={open}>\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={handleDrawerOpen}\r\n                            edge=\"start\"\r\n                            sx={{ mr: 2, ...(open && { display: 'none' }) }}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" noWrap component=\"div\" sx={{ flexGrow: 1 }}>\r\n                            Ubademy\r\n                        </Typography>\r\n\r\n                        <UserOptionMenu />\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    sx={{\r\n                        whiteSpace: \"nowrap\",\r\n                        width: drawerWidthOpen,\r\n                        flexShrink: 0,\r\n                        '& .MuiDrawer-paper': {\r\n                            color: \"#a2a3b7\",\r\n                            backgroundColor: \"#1e1e2d\",\r\n                            width: drawerWidthOpen,\r\n                            boxSizing: 'border-box',\r\n                        },\r\n                        '& > .MuiPaper-root .MuiListItemIcon-root': {\r\n                            color: \"#a2a3b7\",\r\n                        },\r\n                    }}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                >\r\n                    <DrawerHeader>\r\n                        <IconButton onClick={handleDrawerClose} style={{color: \"#a2a3b7\"}}>\r\n                            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                        </IconButton>\r\n                    </DrawerHeader>\r\n                    <Divider />\r\n                    <List>\r\n                        <MenuItem component={Link} to=\"/\">\r\n                            <ListItemIcon>\r\n                                <DashboardRoundedIcon fontSize=\"medium\" />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Dashboard\" />\r\n                        </MenuItem>\r\n                        <MenuItem component={Link} to=\"/\">\r\n                            <ListItemIcon>\r\n                                <SupervisorAccountRoundedIcon fontSize=\"medium\" />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Usuarios\" />\r\n                        </MenuItem>\r\n                    </List>\r\n\r\n                    <DrawerEnd>\r\n                        <Divider />\r\n                        <img src={LogoUbademy} className=\"logo-ubademy\" alt=\"logoUbademy\"></img>\r\n                    </DrawerEnd>\r\n                </Drawer>\r\n                <Main open={open}>\r\n                    <DrawerHeader />\r\n                    { props.children }\r\n                </Main>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport './App.css';\r\nimport { LogIn } from 'pages/admin/LogIn';\r\nimport { PrivateRoute } from 'components/routes/PrivateRoute';\r\nimport { Home } from 'pages/home/Home';\r\nimport { MyProfile } from 'pages/profile/MyProfile';\r\nimport { HomeLayout } from 'layouts/HomeLayout';\r\n\r\nfunction App() {\r\n    return (\r\n        <Router basename=\"/backoffice-web\">\r\n            <Switch>\r\n                <Route exact strict path=\"/login\" render={(props) => <LogIn/>}/>\r\n\r\n                <PrivateRoute\r\n                    path=\"/\"\r\n                    renderComponent={\r\n                        (props) => \r\n                        <HomeLayout>\r\n                            <Switch>\r\n                                <PrivateRoute path=\"/myProfile\" renderComponent={(props) => <MyProfile />} />\r\n                                <PrivateRoute path=\"/\" renderComponent={(props) => <Home/>} />\r\n                            </Switch>\r\n                        </HomeLayout>\r\n                    }\r\n                />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { ReactNode } from 'react';\r\nimport { ThemeProvider, createTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createTheme ({\r\n    typography: {\r\n        fontFamily: [\r\n        'Poppins',\r\n        'Helvetica',\r\n        '\"sans-serif\"',\r\n        ].join(','),\r\n    },\r\n\r\n    components: {\r\n        \r\n        MuiAppBar: {\r\n            styleOverrides: {\r\n                root: {\r\n                    color: 'black',\r\n                    backgroundColor: 'white',\r\n                },\r\n            },\r\n        },\r\n\r\n        MuiCardHeader: {\r\n            styleOverrides: {\r\n                root:{\r\n                  padding: \"12px 14px 12px 14px\",\r\n                  borderBottom: \"2px solid #82C1E7\",\r\n                },\r\n                title:{\r\n                  fontWeight: 600,\r\n                  fontSize: \"1.142857rem\",\r\n                },\r\n            }\r\n        },\r\n\r\n        MuiDivider: {\r\n            styleOverrides: {\r\n                root: {\r\n                    borderColor: \"#82C1E7\"\r\n                }\r\n            }\r\n        }\r\n    },    \r\n});\r\n\r\nexport interface ThemeUbademyProps{\r\n    children?: ReactNode;\r\n}\r\n\r\nexport function ThemeUbademy (props: ThemeUbademyProps) {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n        {props.children}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import { initializeApp } from \"firebase/app\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB5cvfwNdX_HP4pJODxxlNv4JRuIIWJp_s\",\r\n    authDomain: \"ubademy-apigateway.firebaseapp.com\",\r\n    projectId: \"ubademy-apigateway\",\r\n    storageBucket: \"ubademy-apigateway.appspot.com\",\r\n    messagingSenderId: \"934202487625\",\r\n    appId: \"1:934202487625:web:ad459ee18794d8af20e098\",\r\n    measurementId: \"G-7085K4CLZJ\"\r\n};\r\n\r\ninitializeApp(firebaseConfig);\r\n//const analytics = getAnalytics(app);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ThemeUbademy } from 'themes/ThemeUbademy';\r\nimport './config/firebase-config';\r\n\r\nReactDOM.render(\r\n    <div>\r\n        <ThemeUbademy>\r\n            <App />\r\n        </ThemeUbademy>  \r\n    </div>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}